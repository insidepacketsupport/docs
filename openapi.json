{
  "openapi": "3.1.0",
  "info": {
    "title": "NIRO API",
    "description": "Tenant API shema for NIRO",
    "version": "NIRO-2.13.0"
  },
  "paths": {
    "/users": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user",
        "operationId": "delete_user_users_delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Current User",
        "operationId": "get_current_user_users_current_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserData"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ]
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update Current User",
        "operationId": "update_current_user_users_current_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateUserBaseData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ]
      }
    },
    "/users/current/password": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update Current User Password",
        "operationId": "update_current_user_password_users_current_password_put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "new_password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "writeOnly": true,
              "format": "password",
              "title": "New Password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/get_token": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Get user access token. New password used only for users who need to update it.",
        "operationId": "get_token_users_get_token_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeycloakToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/group": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "Get Groups",
        "operationId": "get_groups_group_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBGroupResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/group/{group_name}": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "Get Group",
        "operationId": "get_group_group__group_name__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "group_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Group Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBGroupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/system/{system_name}": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Get a system",
        "operationId": "get_system_system__system_name__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "system_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "System Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBSystemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/system": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Get list of all system",
        "operationId": "get_systems_system_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBSystemResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/wg_tunnel/get_one/{user_name}/{tunnel_id}": {
      "get": {
        "tags": [
          "service - vpn app"
        ],
        "summary": "Get Wg Tunnel",
        "operationId": "get_wg_tunnel_service__tenant_name__wg_tunnel_get_one__user_name___tunnel_id__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tunnel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tunnel Id"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "user_name",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Name"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "System Name"
            }
          },
          {
            "name": "user-agent",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User-Agent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBWGTunnel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/wg_tunnel/get_conf/{user_name}/{tunnel_id}": {
      "get": {
        "tags": [
          "service - vpn app"
        ],
        "summary": "Get Tunnel Wg Conf",
        "operationId": "get_tunnel_wg_conf_service__tenant_name__wg_tunnel_get_conf__user_name___tunnel_id__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tunnel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tunnel Id"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "user_name",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Name"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "System Name"
            }
          },
          {
            "name": "user-agent",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User-Agent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBWGTunnelConfResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/wg_tunnel/get_user_list/{user_name}": {
      "get": {
        "tags": [
          "service - vpn app"
        ],
        "summary": "Get User List Wg Tunnel",
        "operationId": "get_user_list_wg_tunnel_service__tenant_name__wg_tunnel_get_user_list__user_name__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "user_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "User Name"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBWGTunnel_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/wg_tunnel/get_list": {
      "get": {
        "tags": [
          "service - vpn app"
        ],
        "summary": "Get List Wg Tunnel",
        "operationId": "get_list_wg_tunnel_service__tenant_name__wg_tunnel_get_list_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "user_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Name"
            }
          },
          {
            "name": "tunnel_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tunnel Id"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "System Name"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBWGTunnel_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/wg_tunnel/{user_name}/{system_name}": {
      "post": {
        "tags": [
          "service - vpn app"
        ],
        "summary": "Create a new VPN app tunnel",
        "operationId": "create_wg_tunnel_service__tenant_name__wg_tunnel__user_name___system_name__post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "user_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "User Name"
            }
          },
          {
            "name": "system_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "System Name"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBWGTunnelCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/wg_tunnel/{user_name}/{tunnel_id}/device_data": {
      "post": {
        "tags": [
          "service - vpn app"
        ],
        "summary": "Collect remote user app data",
        "operationId": "collect_remote_user_app_data_service__tenant_name__wg_tunnel__user_name___tunnel_id__device_data_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tunnel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tunnel Id"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "user_name",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Name"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "System Name"
            }
          },
          {
            "name": "user-agent",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User-Agent"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBWGTunnelDeviceDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBWGTunnelDeviceDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/wg_tunnel/{user_name}/{tunnel_id}": {
      "delete": {
        "tags": [
          "service - vpn app"
        ],
        "summary": "Delete a VPN app tunnel",
        "operationId": "delete_wg_tunnel_service__tenant_name__wg_tunnel__user_name___tunnel_id__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tunnel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tunnel Id"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "user_name",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Name"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "System Name"
            }
          },
          {
            "name": "user-agent",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User-Agent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/wg_tunnel_status": {
      "get": {
        "tags": [
          "service - vpn app - status"
        ],
        "summary": "vpn app get status",
        "operationId": "wireguard_get_service__tenant_name__wg_tunnel_status_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "System Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Wireguard Get Service  Tenant Name  Wg Tunnel Status Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/wg_tunnel_status/{user_name}": {
      "get": {
        "tags": [
          "service - vpn app - status"
        ],
        "summary": "vpn app get status",
        "operationId": "wireguard_user_get_service__tenant_name__wg_tunnel_status__user_name__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "user_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "User Name"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "system_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "System Name"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Wireguard User Get Service  Tenant Name  Wg Tunnel Status  User Name  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/trusted_access/{user_name}/{tunnel_id}": {
      "post": {
        "tags": [
          "service - trusted access"
        ],
        "summary": "Request Trusted Access",
        "operationId": "request_trusted_access_service__tenant_name__trusted_access__user_name___tunnel_id__post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tunnel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tunnel Id"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "user_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "User Name"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustedAccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "service - trusted access"
        ],
        "summary": "Check Trusted Access",
        "operationId": "check_trusted_access_service__tenant_name__trusted_access__user_name___tunnel_id__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tunnel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tunnel Id"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "user_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "User Name"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustedAccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/firewall_rule": {
      "get": {
        "tags": [
          "service - firewall"
        ],
        "summary": "Get All Tenant Fw Rules",
        "operationId": "get_all_tenant_fw_rules_service__tenant_name__firewall_rule_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBFirewallRuleResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service - firewall"
        ],
        "summary": "Create Tenant Fw Rule",
        "operationId": "create_tenant_fw_rule_service__tenant_name__firewall_rule_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBCreateFirewallRuleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/firewall_rule/dia": {
      "post": {
        "tags": [
          "service - firewall"
        ],
        "summary": "Create Tenant Dia Fw Rule",
        "operationId": "create_tenant_dia_fw_rule_service__tenant_name__firewall_rule_dia_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBCreateFirewallRuleDiaRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/firewall_rule/{rule_name}": {
      "put": {
        "tags": [
          "service - firewall"
        ],
        "summary": "Update FW rule",
        "operationId": "update_tenant_fw_rule_service__tenant_name__firewall_rule__rule_name__put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateFirewallRuleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "service - firewall"
        ],
        "summary": "Get Tenant Fw Rule",
        "operationId": "get_tenant_fw_rule_service__tenant_name__firewall_rule__rule_name__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBFirewallRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service - firewall"
        ],
        "summary": "Delete Tenant Fw Rule",
        "operationId": "delete_tenant_fw_rule_service__tenant_name__firewall_rule__rule_name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/firewall_rule/{rule_name}/name": {
      "patch": {
        "tags": [
          "service - firewall"
        ],
        "summary": "Modify rule's name",
        "operationId": "update_tenant_fw_rule_name_service__tenant_name__firewall_rule__rule_name__name_patch",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateFirewallRuleNameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/firewall_rule/{rule_name}/priority": {
      "patch": {
        "tags": [
          "service - firewall"
        ],
        "summary": "Modify rule's priority",
        "operationId": "update_tenant_fw_rule_priority_service__tenant_name__firewall_rule__rule_name__priority_patch",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateFirewallRulePriorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/firewall_rule/{rule_name}/filters": {
      "patch": {
        "tags": [
          "service - firewall"
        ],
        "summary": "Modify rule's filter",
        "operationId": "update_tenant_fw_rule_filters_service__tenant_name__firewall_rule__rule_name__filters_patch",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateFirewallRuleFiltersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/firewall_rule/{rule_name}/forwarding_policy": {
      "patch": {
        "tags": [
          "service - firewall"
        ],
        "summary": "Modify rule's forwarding policy",
        "operationId": "update_tenant_fw_rule_forwarding_policy_service__tenant_name__firewall_rule__rule_name__forwarding_policy_patch",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateFirewallRuleForwardingPolicyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/firewall_rule/{rule_name}/description": {
      "patch": {
        "tags": [
          "service - firewall"
        ],
        "summary": "Modify rule's description",
        "operationId": "update_tenant_fw_rule_description_service__tenant_name__firewall_rule__rule_name__description_patch",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateDescriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/firewall_rule/{rule_name}/enable": {
      "patch": {
        "tags": [
          "service - firewall"
        ],
        "summary": "Modify rule's enable/disable",
        "operationId": "update_tenant_fw_rule_enable_service__tenant_name__firewall_rule__rule_name__enable_patch",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateEnableRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/firewall_rule/{rule_name}/dia": {
      "put": {
        "tags": [
          "service - firewall"
        ],
        "summary": "Update FW rule",
        "operationId": "update_tenant_cluster_fw_rule_service__tenant_name__firewall_rule__rule_name__dia_put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateDIAFirewallRuleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/pbr_rule": {
      "get": {
        "tags": [
          "service - pbr"
        ],
        "summary": "Get All Tenant Pbr Rules",
        "operationId": "get_all_tenant_pbr_rules_service__tenant_name__pbr_rule_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBPBRRuleResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service - pbr"
        ],
        "summary": "Create Tenant Pbr Rule",
        "operationId": "create_tenant_pbr_rule_service__tenant_name__pbr_rule_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBCreatePBRRuleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/pbr_rule/{rule_name}": {
      "put": {
        "tags": [
          "service - pbr"
        ],
        "summary": "Update PBR rule",
        "operationId": "update_tenant_pbr_rule_service__tenant_name__pbr_rule__rule_name__put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdatePBRRuleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "service - pbr"
        ],
        "summary": "Get Tenant Pbr Rule",
        "operationId": "get_tenant_pbr_rule_service__tenant_name__pbr_rule__rule_name__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBPBRRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service - pbr"
        ],
        "summary": "Delete Tenant Pbr Rule",
        "operationId": "delete_tenant_pbr_rule_service__tenant_name__pbr_rule__rule_name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/pbm_rule": {
      "get": {
        "tags": [
          "service - pbm"
        ],
        "summary": "Get All Tenant Pbm Rules",
        "operationId": "get_all_tenant_pbm_rules_service__tenant_name__pbm_rule_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBPBMRuleResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service - pbm"
        ],
        "summary": "Create Tenant Pbm Rule",
        "operationId": "create_tenant_pbm_rule_service__tenant_name__pbm_rule_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBCreatePBMRuleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/pbm_rule/{rule_name}": {
      "put": {
        "tags": [
          "service - pbm"
        ],
        "summary": "Update PBM rule",
        "operationId": "update_tenant_pbm_rule_service__tenant_name__pbm_rule__rule_name__put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdatePBMRuleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "service - pbm"
        ],
        "summary": "Get Tenant Pbm Rule",
        "operationId": "get_tenant_pbm_rule_service__tenant_name__pbm_rule__rule_name__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBPBMRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service - pbm"
        ],
        "summary": "Delete Tenant Pbm Rule",
        "operationId": "delete_tenant_pbm_rule_service__tenant_name__pbm_rule__rule_name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/nat_rule": {
      "get": {
        "tags": [
          "service - NAT"
        ],
        "summary": "Get all NAT rules",
        "operationId": "get_all_tenant_nat_rules_service__tenant_name__nat_rule_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBBaseNATRule_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service - NAT"
        ],
        "summary": "Create NAT rule",
        "operationId": "create_tenant_nat_rule_service__tenant_name__nat_rule_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBCreateNATRuleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/nat_rule/{rule_name}": {
      "get": {
        "tags": [
          "service - NAT"
        ],
        "summary": "Get specific NAT Rule",
        "operationId": "get_tenant_nat_rule_service__tenant_name__nat_rule__rule_name__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBBaseNATRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "service - NAT"
        ],
        "summary": "Modify NAT rule",
        "operationId": "update_tenant_nat_rule_service__tenant_name__nat_rule__rule_name__put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NATRuleUpdateData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service - NAT"
        ],
        "summary": "Delete NAT rule",
        "operationId": "delete_tenant_nat_rule_service__tenant_name__nat_rule__rule_name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Rule Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp/autonomous_system": {
      "get": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Get the autonomous system info for a Tenant",
        "operationId": "get_tenant_autonomous_system_service__tenant_name__bgp_autonomous_system_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAutonomousSystem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Create an autonomous system for a Tenant",
        "operationId": "create_tenant_autonomous_system_service__tenant_name__bgp_autonomous_system_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBCreateAutonomousSystemRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Delete an autonomous system from a Tenant",
        "operationId": "delete_autonomous_system_service__tenant_name__bgp_autonomous_system_delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp/neighbor": {
      "get": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Get All Tenant Neighbors",
        "operationId": "get_all_tenant_neighbors_service__tenant_name__bgp_neighbor_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_Union_NBNeighbor__NBDiaNeighbor__"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Create Tenant Neighbor",
        "operationId": "create_tenant_neighbor_service__tenant_name__bgp_neighbor_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBCreateBGPNeighborRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp/neighbor/{remote_router_ip}": {
      "put": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Update neighbor",
        "operationId": "update_tenant_neighbor_service__tenant_name__bgp_neighbor__remote_router_ip__put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "remote_router_ip",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ipv4"
                },
                {
                  "type": "string",
                  "format": "ipv6"
                }
              ],
              "title": "Remote Router Ip"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBNeighborUpdateData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Delete Tenant Neighbor",
        "operationId": "delete_tenant_neighbor_service__tenant_name__bgp_neighbor__remote_router_ip__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "remote_router_ip",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ipv4"
                },
                {
                  "type": "string",
                  "format": "ipv6"
                }
              ],
              "title": "Remote Router Ip"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Get Tenant Neighbor By Ip",
        "operationId": "get_tenant_neighbor_by_ip_service__tenant_name__bgp_neighbor__remote_router_ip__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "remote_router_ip",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ipv4"
                },
                {
                  "type": "string",
                  "format": "ipv6"
                }
              ],
              "title": "Remote Router Ip"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBNeighbor"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp/neighbor/{remote_router_ip}/reset": {
      "put": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Get advertised routes",
        "operationId": "reset_bgp_service__tenant_name__bgp_neighbor__remote_router_ip__reset_put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "remote_router_ip",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Remote Router Ip"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBBgpResetUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp/neighbor/{remote_router_ip}/advertised_routes": {
      "get": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Get advertised routes",
        "operationId": "get_advertised_routes_service__tenant_name__bgp_neighbor__remote_router_ip__advertised_routes_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "remote_router_ip",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Remote Router Ip"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "gate_vi_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Gate Vi Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertisedRoutes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp/neighbor/{remote_router_ip}/received_routes": {
      "get": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Get received routes",
        "operationId": "get_received_routes_service__tenant_name__bgp_neighbor__remote_router_ip__received_routes_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "remote_router_ip",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Remote Router Ip"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "gate_vi_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Gate Vi Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BgpReceivedRoutes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp/neighbor/{remote_router_ip}/filtered_routes": {
      "get": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Get filtered routes",
        "operationId": "get_filtered_routes_service__tenant_name__bgp_neighbor__remote_router_ip__filtered_routes_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "remote_router_ip",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Remote Router Ip"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "gate_vi_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Gate Vi Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BgpFilteredReceivedRoutes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp_pfx_list": {
      "get": {
        "tags": [
          "service - bgp_pfx_list"
        ],
        "summary": "Get All Tenant Bgp Route Maps",
        "operationId": "get_all_tenant_bgp_route_maps_service__tenant_name__bgp_pfx_list_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBBGPRouteMap_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service - bgp_pfx_list"
        ],
        "summary": "Create Tenant Bgp Route Map",
        "operationId": "create_tenant_bgp_route_map_service__tenant_name__bgp_pfx_list_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBBGPRouteMapCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp_pfx_list/{name}": {
      "get": {
        "tags": [
          "service - bgp_pfx_list"
        ],
        "summary": "Get Tenant Bgp Route Map",
        "operationId": "get_tenant_bgp_route_map_service__tenant_name__bgp_pfx_list__name__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBBGPRouteMap"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service - bgp_pfx_list"
        ],
        "summary": "Delete Tenant Bgp Route Map",
        "operationId": "delete_tenant_bgp_route_map_service__tenant_name__bgp_pfx_list__name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp_route_map_rule": {
      "get": {
        "tags": [
          "service - bgp_route_map_rule"
        ],
        "summary": "Get All Tenant Bgp Route Map Rules",
        "operationId": "get_all_tenant_bgp_route_map_rules_service__tenant_name__bgp_route_map_rule_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_BGPRouteMapRule_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service - bgp_route_map_rule"
        ],
        "summary": "Create Tenant Bgp Route Map Rule",
        "operationId": "create_tenant_bgp_route_map_rule_service__tenant_name__bgp_route_map_rule_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBBGPRouteMapRuleCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp_route_map_rule/{name}": {
      "get": {
        "tags": [
          "service - bgp_route_map_rule"
        ],
        "summary": "Get Tenant Bgp Route Map Rule",
        "operationId": "get_tenant_bgp_route_map_rule_service__tenant_name__bgp_route_map_rule__name__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BGPRouteMapRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service - bgp_route_map_rule"
        ],
        "summary": "Delete Tenant Bgp Route Map Rule",
        "operationId": "delete_tenant_bgp_route_map_rule_service__tenant_name__bgp_route_map_rule__name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp/status": {
      "get": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Get Bgp Status",
        "operationId": "get_bgp_status_service__tenant_name__bgp_status_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BgpStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp/summery": {
      "get": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Get Bgp Summery",
        "operationId": "get_bgp_summery_service__tenant_name__bgp_summery_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "remote_router_ip",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ipv4"
                },
                {
                  "type": "string",
                  "format": "ipv6"
                }
              ],
              "title": "Remote Router Ip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BGPSummeryGetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/bgp/bfd_status": {
      "get": {
        "tags": [
          "service - routing - BGP"
        ],
        "summary": "Get Bfd Status",
        "operationId": "get_bfd_status_service__tenant_name__bgp_bfd_status_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_BfdPeerData_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/sdr": {
      "get": {
        "tags": [
          "service - SDR"
        ],
        "summary": "Get Tenant Sdr",
        "operationId": "get_tenant_sdr_service__tenant_name__sdr_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBSDR"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/static_route": {
      "get": {
        "tags": [
          "service - routing - static route"
        ],
        "summary": "Get all static routes by tenant",
        "operationId": "get_static_routes_service__tenant_name__static_route_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBStaticRouteResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service - routing - static route"
        ],
        "summary": "Create a new static route",
        "operationId": "add_static_route_service__tenant_name__static_route_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBCreateStaticRouteRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service - routing - static route"
        ],
        "summary": "Delete a static route",
        "operationId": "delete_static_route_service__tenant_name__static_route_delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBDeleteStaticRouteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/static_route/description": {
      "put": {
        "tags": [
          "service - routing - static route"
        ],
        "summary": "Modify a static routes description",
        "operationId": "update_static_route_description_service__tenant_name__static_route_description_put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "destination",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ipv4network"
                },
                {
                  "type": "string",
                  "format": "ipv6network"
                }
              ],
              "title": "Destination"
            }
          },
          {
            "name": "gateway_ip_address",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ipv4"
                },
                {
                  "type": "string",
                  "format": "ipv6"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Gateway Ip Address"
            }
          },
          {
            "name": "gateway_interface",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Gateway Interface"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateDescriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/static_route/enabled": {
      "put": {
        "tags": [
          "service - routing - static route"
        ],
        "summary": "Modify a static routes enabled status",
        "operationId": "update_static_route_enabled_service__tenant_name__static_route_enabled_put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "destination",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ipv4network"
                },
                {
                  "type": "string",
                  "format": "ipv6network"
                }
              ],
              "title": "Destination"
            }
          },
          {
            "name": "gateway_ip_address",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ipv4"
                },
                {
                  "type": "string",
                  "format": "ipv6"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Gateway Ip Address"
            }
          },
          {
            "name": "gateway_interface",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Gateway Interface"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateEnableRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/arp": {
      "get": {
        "tags": [
          "service - arp"
        ],
        "summary": "Get the ARP information for specific tenant",
        "operationId": "get_arp_service__tenant_name__arp_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_TenantArpEntry_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/route": {
      "get": {
        "tags": [
          "service - routes"
        ],
        "summary": "Get the routes information for specific tenant",
        "operationId": "get_routes_service__tenant_name__route_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_TenantRoute_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/group": {
      "get": {
        "tags": [
          "service - group"
        ],
        "summary": "Get Tenant Groups",
        "operationId": "get_tenant_groups_service__tenant_name__group_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBGroupResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service - group"
        ],
        "summary": "Create Tenant Group",
        "operationId": "create_tenant_group_service__tenant_name__group_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBCreateTenantGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/group/{group_name}": {
      "get": {
        "tags": [
          "service - group"
        ],
        "summary": "Get Tenant Group",
        "operationId": "get_tenant_group_service__tenant_name__group__group_name__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "group_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Group Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBGroupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "service - group"
        ],
        "summary": "Update Tenant Group",
        "operationId": "update_tenant_group_service__tenant_name__group__group_name__put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "group_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Group Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateTenantGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service - group"
        ],
        "summary": "Delete Tenant Group",
        "operationId": "delete_tenant_group_service__tenant_name__group__group_name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "group_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Group Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/enabled_service": {
      "get": {
        "tags": [
          "service - enabled services"
        ],
        "summary": "Get All Tenant Enabled Services",
        "operationId": "get_all_tenant_enabled_services_service__tenant_name__enabled_service_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBEnabledServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "service - enabled services"
        ],
        "summary": "Update Tenant Enabled Services",
        "operationId": "update_tenant_enabled_services_service__tenant_name__enabled_service_put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBCreateEnabledServiceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/connection/connections": {
      "post": {
        "tags": [
          "service - connection"
        ],
        "summary": "Create Connections",
        "operationId": "create_connections_service__tenant_name__connection_connections_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBConnectionCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/l2": {
      "get": {
        "tags": [
          "service - l2_interface"
        ],
        "summary": "Get All Tenant L2 Interface",
        "operationId": "get_all_tenant_l2_interface_service__tenant_name__l2_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBInterfaceTenantResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/l2/customer_port": {
      "get": {
        "tags": [
          "service - l2_interface"
        ],
        "summary": "Get All Tenant L2 Interface Requests",
        "operationId": "get_all_tenant_l2_interface_requests_service__tenant_name__l2_customer_port_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBCustomerPortResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service - l2_interface"
        ],
        "summary": "Request Customer Port",
        "operationId": "request_customer_port_service__tenant_name__l2_customer_port_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBRequestCustomerPortRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/l2/customer_port/{name}": {
      "put": {
        "tags": [
          "service - l2_interface"
        ],
        "summary": "Update Customer Port Labels",
        "operationId": "update_customer_port_labels_service__tenant_name__l2_customer_port__name__put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateCustomerPortRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service - l2_interface"
        ],
        "summary": "delete a request for port",
        "operationId": "unrequest_customer_port_l2_service__tenant_name__l2_customer_port__name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "port_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "customer_location",
              "title": "Port Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/l2/customer_port/{customer_port_name}/vlan": {
      "post": {
        "tags": [
          "service - l2_interface"
        ],
        "summary": "Create Tenant L2",
        "operationId": "create_tenant_l2_service__tenant_name__l2_customer_port__customer_port_name__vlan_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "customer_port_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Customer Port Name"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBTenantL2CreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/l2/customer_port/{customer_port_name}/vlan/{name}": {
      "put": {
        "tags": [
          "service - l2_interface"
        ],
        "summary": "Update Port Vlan Interface Bandwidth",
        "operationId": "update_port_vlan_interface_bandwidth_service__tenant_name__l2_customer_port__customer_port_name__vlan__name__put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "customer_port_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Customer Port Name"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBTenantL2UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service - l2_interface"
        ],
        "summary": "Delete an interface",
        "operationId": "delete_port_vlan_interface_service__tenant_name__l2_customer_port__customer_port_name__vlan__name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "customer_port_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Customer Port Name"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/l2/aws_direct_connect": {
      "post": {
        "tags": [
          "service - l2_interface"
        ],
        "summary": "Create Aws Tenant L2",
        "operationId": "create_aws_tenant_l2_service__tenant_name__l2_aws_direct_connect_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBTenantAWSDirectConnectCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/l2/aws_direct_connect/{customer_port_name}": {
      "delete": {
        "tags": [
          "service - l2_interface"
        ],
        "summary": "Delete an interface",
        "operationId": "delete_aws_port_vlan_interface_service__tenant_name__l2_aws_direct_connect__customer_port_name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "customer_port_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Customer Port Name"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/l2/azure_service_key": {
      "get": {
        "tags": [
          "service - l2_interface"
        ],
        "summary": "discover the azure secret key",
        "operationId": "discover_key_azure_service__tenant_name__l2_azure_service_key_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "service_key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Discover Key Azure Service  Tenant Name  L2 Azure Service Key Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/l2/azure_direct_connect/{customer_port_name}": {
      "delete": {
        "tags": [
          "service - l2_interface"
        ],
        "summary": "Delete an interface",
        "operationId": "delete_azure_port_vlan_interface_service__tenant_name__l2_azure_direct_connect__customer_port_name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "customer_port_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Customer Port Name"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/l2/gcp_direct_connect/{customer_port_name}": {
      "delete": {
        "tags": [
          "service - l2_interface"
        ],
        "summary": "Delete an interface",
        "operationId": "delete_gcp_port_vlan_interface_service__tenant_name__l2_gcp_direct_connect__customer_port_name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "customer_port_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Customer Port Name"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/asn": {
      "get": {
        "tags": [
          "service - asn"
        ],
        "summary": "Get Asns",
        "operationId": "get_asns_service__tenant_name__asn_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBASN_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service - asn"
        ],
        "summary": "Create Asn",
        "operationId": "create_asn_service__tenant_name__asn_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBCreateASNRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/asn/{asn}": {
      "put": {
        "tags": [
          "service - asn"
        ],
        "summary": "Update Asn",
        "operationId": "update_asn_service__tenant_name__asn__asn__put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "asn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asn"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBTenantUpdateASNRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service - asn"
        ],
        "summary": "delete a request for port",
        "operationId": "delete_asn_l2_service__tenant_name__asn__asn__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "asn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Asn"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/ddos/dia": {
      "get": {
        "tags": [
          "tenant - ip-flood"
        ],
        "summary": "Get tenant ip_flood",
        "operationId": "get_tenant_ip_flood_service__tenant_name__ddos_dia_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBTenantIpFlood_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/ddos/dia/{ip_flood_id}": {
      "delete": {
        "tags": [
          "tenant - ip-flood"
        ],
        "summary": "Delete a ip flood",
        "operationId": "delete_tenant_ip_flood_service__tenant_name__ddos_dia__ip_flood_id__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Name"
            }
          },
          {
            "name": "ip_flood_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Ip Flood Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tenant - ip-flood"
        ],
        "summary": "Update ip flood",
        "operationId": "update_ip_flood_service__tenant_name__ddos_dia__ip_flood_id__put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Name"
            }
          },
          {
            "name": "ip_flood_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Ip Flood Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateIpFloodDiaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/ddos/dia/all": {
      "put": {
        "tags": [
          "tenant - ip-flood"
        ],
        "summary": "Update ip flood",
        "operationId": "update_mitigate_all_service__tenant_name__ddos_dia_all_put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateMitigationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/ddos/dia/customize/{ip_flood_id}": {
      "post": {
        "tags": [
          "tenant - ip-flood"
        ],
        "summary": "customize new ip flood",
        "operationId": "duplicate_tenant_ip_flood_service__tenant_name__ddos_dia_customize__ip_flood_id__post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "ip_flood_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Ip Flood Id"
            }
          },
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBDuplicateIpFloodDiaRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/mac": {
      "get": {
        "tags": [
          "service - mac"
        ],
        "summary": "Get the MAC information for specific tenant",
        "operationId": "get_arp_service__tenant_name__mac_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NbMacTenantEntry_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/looking_glass/ping": {
      "post": {
        "tags": [
          "service - looking glass"
        ],
        "summary": "Ping",
        "operationId": "ping_service_looking_glass_ping_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PingRequestParameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ]
      }
    },
    "/service/looking_glass/route_lookup": {
      "post": {
        "tags": [
          "service - looking glass",
          "service - looking glass"
        ],
        "summary": "Get Route Lookup",
        "operationId": "get_route_lookup_service_looking_glass_route_lookup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteLookUpRequestParameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ]
      }
    },
    "/service/looking_glass/pcap": {
      "post": {
        "tags": [
          "service - looking glass",
          "service - looking glass"
        ],
        "summary": "Pcap",
        "operationId": "pcap_service_looking_glass_pcap_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PCAPParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ]
      }
    },
    "/service/looking_glass/result": {
      "post": {
        "tags": [
          "service - looking glass"
        ],
        "summary": "Get Result",
        "operationId": "get_result_service_looking_glass_result_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LookingGlassRequestResultParameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutorResultResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ]
      }
    },
    "/config/ipam/pfx_available": {
      "get": {
        "tags": [
          "config - ipam"
        ],
        "summary": "Get all ipam pools usage",
        "operationId": "get_ipam_pool_usage_tenant_config_ipam_pfx_available_get",
        "parameters": [
          {
            "name": "location_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LocationType"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "dia_service",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Dia Service"
            }
          },
          {
            "name": "ipsec_service",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Ipsec Service"
            }
          },
          {
            "name": "nat_service",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Nat Service"
            }
          },
          {
            "name": "snat_service",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Snat Service"
            }
          },
          {
            "name": "shared",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Shared"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBTenantIPAM"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/config/request/user/all": {
      "get": {
        "tags": [
          "config - request"
        ],
        "summary": "Get All User Requests",
        "operationId": "get_all_user_requests_config_request_user_all_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ConfigurationRequestStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBRequestResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/config/request/tenant/all": {
      "get": {
        "tags": [
          "config - request"
        ],
        "summary": "Get All Tenant Request",
        "operationId": "get_all_tenant_request_config_request_tenant_all_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ConfigurationRequestStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBRequestResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/config/request/{request_id}": {
      "get": {
        "tags": [
          "config - request"
        ],
        "summary": "Get Request",
        "operationId": "get_request_config_request__request_id__get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/config/services_package": {
      "get": {
        "tags": [
          "config - services_package"
        ],
        "summary": "Get all services_packages",
        "operationId": "get_services_package_config_services_package_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisibleItemsList_NBServicesPackage_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/max_bandwidth": {
      "get": {
        "tags": [
          "tenant"
        ],
        "summary": "Get tenants L2 max bandwidth",
        "operationId": "get_tenant_max_bandwidth_tenant__tenant_name__max_bandwidth_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBMaxBandwidthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/contact_info": {
      "patch": {
        "tags": [
          "tenant"
        ],
        "summary": "Modify tenant's contact info",
        "operationId": "update_tenant_contact_info_tenant__tenant_name__contact_info_patch",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateTenantContactInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/services_package": {
      "patch": {
        "tags": [
          "tenant"
        ],
        "summary": "Modify tenant's services package",
        "operationId": "update_tenant_services_package_tenant__tenant_name__services_package_patch",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateTenantServicesPackageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/full_name": {
      "patch": {
        "tags": [
          "tenant"
        ],
        "summary": "Modify tenant's contact info",
        "operationId": "update_tenant_full_name_tenant__tenant_name__full_name_patch",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateTenantFullNameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/notifications": {
      "get": {
        "tags": [
          "tenant"
        ],
        "summary": "Get notifications for each tenant",
        "operationId": "get_tenant_notifications_tenant__tenant_name__notifications_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_TenantNotificationsResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/virtual_interface/all_types": {
      "get": {
        "tags": [
          "tenant - virtual interface"
        ],
        "summary": "Get all virtual interfaces per tenant",
        "operationId": "get_tenant_virtual_interface_all_types_tenant__tenant_name__virtual_interface_all_types_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_Union_NBAllVirtualInterfaceTenantResponse__NBAllVirtualInterfaceGateResponse__NBAllVirtualInterfaceIPSECResponse__"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/virtual_interface": {
      "get": {
        "tags": [
          "tenant - virtual interface"
        ],
        "summary": "Get all virtual interfaces of type bridge domain per tenant",
        "operationId": "get_tenant_virtual_interface_tenant__tenant_name__virtual_interface_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBVirtualInterfaceTenantResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tenant - virtual interface"
        ],
        "summary": "Create a new virtual interface for a tenant",
        "operationId": "create_tenant_virtual_interface_tenant__tenant_name__virtual_interface_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBVirtualInterfaceTenantCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/virtual_interface/{virtual_interface_name}": {
      "put": {
        "tags": [
          "tenant - virtual interface"
        ],
        "summary": "Update virtual interface",
        "operationId": "update_virtual_interface_tenant__tenant_name__virtual_interface__virtual_interface_name__put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "virtual_interface_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Virtual Interface Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBVirtualInterfaceTenantBridgeDomainUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tenant - virtual interface"
        ],
        "summary": "Delete Tenant Virtual Interface",
        "operationId": "delete_tenant_virtual_interface_tenant__tenant_name__virtual_interface__virtual_interface_name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "virtual_interface_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Virtual Interface Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/virtual_interface/{virtual_interface_name}/ip_addresses": {
      "patch": {
        "tags": [
          "tenant - virtual interface"
        ],
        "summary": "Modify virtual interface IP addresses",
        "operationId": "edit_bd_ip_addresses_tenant__tenant_name__virtual_interface__virtual_interface_name__ip_addresses_patch",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "virtual_interface_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Virtual Interface Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateVirtualInterfaceAddressesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/virtual_interface/gate": {
      "get": {
        "tags": [
          "tenant - virtual interface - gate"
        ],
        "summary": "Get all virtual interfaces per tenant type gate",
        "operationId": "get_tenant_virtual_interface_gate_tenant__tenant_name__virtual_interface_gate_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBVirtualInterfaceGateResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/users": {
      "post": {
        "tags": [
          "tenant - users"
        ],
        "summary": "Create new user for tenant",
        "operationId": "create_tenant_user_tenant__tenant_name__users_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUserCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "tenant - users"
        ],
        "summary": "Get tenant user or all tenant users",
        "operationId": "get_users_tenant__tenant_name__users_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Name"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/NBTenantUser"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NBTenantUser"
                      }
                    }
                  ],
                  "title": "Response Get Users Tenant  Tenant Name  Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tenant - users"
        ],
        "summary": "Update tenant user",
        "operationId": "update_tenant_user_tenant__tenant_name__users_put",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBUpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tenant - users"
        ],
        "summary": "Delete user",
        "operationId": "delete_tenant_user_tenant__tenant_name__users_delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/request_gate_vi": {
      "post": {
        "tags": [
          "tenant - public ip"
        ],
        "summary": "Request a Gate VI",
        "operationId": "create_public_ip_tenant__tenant_name__request_gate_vi_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBPublicIPCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/request_gate_vi/{name}": {
      "delete": {
        "tags": [
          "tenant - public ip"
        ],
        "summary": "Delete Gate VI",
        "operationId": "delete_public_ip_tenant__tenant_name__request_gate_vi__name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/dia": {
      "post": {
        "tags": [
          "tenant - dia"
        ],
        "summary": "Request a Gate VI",
        "operationId": "create_dia_tenant__tenant_name__dia_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBDIACreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenant/{tenant_name}/dia/{name}": {
      "delete": {
        "tags": [
          "tenant - dia"
        ],
        "summary": "Delete Gate VI",
        "operationId": "delete_dia_tenant__tenant_name__dia__name__delete",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NBRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service/{tenant_name}/events": {
      "get": {
        "tags": [
          "service - orders"
        ],
        "summary": "Get all user events",
        "operationId": "get_events_by_tenant_service__tenant_name__events_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Tenant Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/orders/catalog": {
      "get": {
        "tags": [
          "service catalog"
        ],
        "summary": "Get all services items ",
        "operationId": "read_all_orders_catalog_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BillingServiceType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Product"
            }
          },
          {
            "name": "enable",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Enable"
            }
          },
          {
            "name": "operator",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Operator"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            }
          },
          {
            "name": "base_quantity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Base Quantity"
            }
          },
          {
            "name": "base_unit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Base Unit"
            }
          },
          {
            "name": "contract_period",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Contract Period"
            }
          },
          {
            "name": "additional_unit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Additional Unit"
            }
          },
          {
            "name": "discount",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Discount"
            }
          },
          {
            "name": "customer_package",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Customer Package"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_NBServiceItem_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/orders/terms_and_conditions/all": {
      "get": {
        "tags": [
          "terms and conditions"
        ],
        "summary": "Get all terms and conditions",
        "operationId": "get_all_terms_and_conditions_orders_terms_and_conditions_all_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsList_TermsAndConditions_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/orders/terms_and_conditions": {
      "get": {
        "tags": [
          "terms and conditions"
        ],
        "summary": "Get terms and conditions",
        "operationId": "get_terms_and_conditions_service_orders_terms_and_conditions_get",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "service",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Service"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "enable",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Enable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TermsAndConditions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/orders/terms_and_conditions/{tenant_name}/sign": {
      "post": {
        "tags": [
          "terms and conditions"
        ],
        "summary": "Sign Terms",
        "operationId": "sign_terms_orders_terms_and_conditions__tenant_name__sign_post",
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NBCustomerToTermsCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerToTermsAgreement"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/statistics/virtual_interface": {
      "post": {
        "tags": [
          "statistics"
        ],
        "summary": "Get Statistics",
        "operationId": "get_vi_statistics_statistics_virtual_interface_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsRequest_StatisticsMetricsColumns_StatisticsViFilters_StatisticsFlags_"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ]
      }
    },
    "/statistics/l2_interface": {
      "post": {
        "tags": [
          "statistics"
        ],
        "summary": "Get l2 Statistics",
        "operationId": "get_l2_interface_statistics_statistics_l2_interface_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsL2Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ]
      }
    },
    "/statistics/flood_traffic": {
      "post": {
        "tags": [
          "statistics"
        ],
        "summary": "Get flood traffic Statistics",
        "operationId": "get_flood_traffic_statistics_statistics_flood_traffic_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsFloodRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ]
      }
    },
    "/statistics/ddos_attack_traffic": {
      "post": {
        "tags": [
          "statistics"
        ],
        "summary": "Get DDoS attack traffic Statistics",
        "operationId": "get_ddos_traffic_statistics_statistics_ddos_attack_traffic_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsDdosAttackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ]
      }
    },
    "/statistics/firewall_traffic": {
      "post": {
        "tags": [
          "statistics"
        ],
        "summary": "Get firewall traffic Statistics",
        "operationId": "get_firewall_traffic_statistics_statistics_firewall_traffic_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsFirewallRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ]
      }
    },
    "/statistics/nat_traffic": {
      "post": {
        "tags": [
          "statistics"
        ],
        "summary": "Get NAT traffic Statistics",
        "operationId": "get_nat_traffic_statistics_statistics_nat_traffic_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsNatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ]
      }
    },
    "/statistics/pbr_traffic": {
      "post": {
        "tags": [
          "statistics"
        ],
        "summary": "Get PBR traffic Statistics",
        "operationId": "get_pbr_traffic_statistics_statistics_pbr_traffic_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsPbrRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerFromCookie": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AWSAccessKeyCreateRequest": {
        "properties": {
          "access_key_id": {
            "type": "string",
            "title": "Access Key Id"
          },
          "secret_access_key": {
            "type": "string",
            "title": "Secret Access Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "access_key_id",
          "secret_access_key"
        ],
        "title": "AWSAccessKeyCreateRequest"
      },
      "AWSBandwidth": {
        "type": "string",
        "enum": [
          "50000",
          "100000",
          "200000",
          "300000",
          "400000",
          "500000",
          "1000000",
          "2000000",
          "5000000",
          "10000000",
          "25000000"
        ],
        "title": "AWSBandwidth"
      },
      "AdvertisedRoutes": {
        "properties": {
          "advertisedRoutes": {
            "additionalProperties": true,
            "type": "object",
            "title": "Advertisedroutes"
          },
          "totalPrefixCounter": {
            "type": "integer",
            "title": "Totalprefixcounter"
          },
          "filteredPrefixCounter": {
            "type": "integer",
            "title": "Filteredprefixcounter"
          }
        },
        "type": "object",
        "required": [
          "advertisedRoutes",
          "totalPrefixCounter",
          "filteredPrefixCounter"
        ],
        "title": "AdvertisedRoutes"
      },
      "ArubaAccessKeyCreateRequest": {
        "properties": {
          "access_key": {
            "type": "string",
            "title": "Access Key",
            "description": "Username when the access_type is USER/PASSWORD"
          },
          "access_secret": {
            "type": "string",
            "title": "Access Secret",
            "description": "Password when the access_type is USER/PASSWORD"
          },
          "access_type": {
            "$ref": "#/components/schemas/ArubaAccessTypes",
            "default": "user_password"
          },
          "end_point": {
            "type": "string",
            "title": "End Point",
            "description": "End point like `https://your-domain.com/`.Don't append the `gms/rest` to the end-point"
          }
        },
        "type": "object",
        "required": [
          "access_key",
          "access_secret",
          "end_point"
        ],
        "title": "ArubaAccessKeyCreateRequest"
      },
      "ArubaAccessKeyResponse": {
        "properties": {
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          },
          "access_key": {
            "type": "string",
            "title": "Access Key"
          },
          "access_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Secret"
          },
          "access_type": {
            "$ref": "#/components/schemas/ArubaAccessTypes",
            "default": "user_password"
          },
          "end_point": {
            "type": "string",
            "title": "End Point"
          }
        },
        "type": "object",
        "required": [
          "tenant_name",
          "access_key",
          "end_point"
        ],
        "title": "ArubaAccessKeyResponse"
      },
      "ArubaAccessTypes": {
        "type": "string",
        "enum": [
          "user_password"
        ],
        "title": "ArubaAccessTypes"
      },
      "AuthType": {
        "type": "string",
        "enum": [
          "sha256",
          "sha384",
          "sha512",
          "prfsha256",
          "prfsha384",
          "prfsha512"
        ],
        "title": "AuthType"
      },
      "AutonomousSystem": {
        "properties": {
          "asn": {
            "type": "integer",
            "title": "Asn"
          },
          "keepalive": {
            "type": "integer",
            "title": "Keepalive"
          },
          "hold": {
            "type": "integer",
            "title": "Hold"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          }
        },
        "type": "object",
        "required": [
          "asn",
          "keepalive",
          "hold",
          "tenant_name"
        ],
        "title": "AutonomousSystem"
      },
      "AwsVpnRequest": {
        "properties": {
          "connection_name": {
            "type": "string",
            "title": "Connection Name"
          },
          "system_name": {
            "type": "string",
            "title": "System Name"
          },
          "gate_name": {
            "type": "string",
            "title": "Gate Name"
          },
          "route_type": {
            "type": "boolean",
            "title": "Route Type"
          },
          "network_segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Network Segments",
            "default": []
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          },
          "vpc_id": {
            "type": "string",
            "title": "Vpc Id"
          },
          "region": {
            "type": "string",
            "title": "Region"
          }
        },
        "type": "object",
        "required": [
          "connection_name",
          "system_name",
          "gate_name",
          "route_type",
          "vpc_id",
          "region"
        ],
        "title": "AwsVpnRequest"
      },
      "AwsVpnRequestNew": {
        "properties": {
          "connection_name": {
            "type": "string",
            "title": "Connection Name"
          },
          "gate_name": {
            "type": "string",
            "title": "Gate Name"
          },
          "route_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Type"
          },
          "network_segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Network Segments",
            "default": []
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          },
          "vvi_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vvi Ip"
          },
          "vpc_id": {
            "type": "string",
            "title": "Vpc Id"
          },
          "region": {
            "type": "string",
            "title": "Region"
          }
        },
        "type": "object",
        "required": [
          "connection_name",
          "gate_name",
          "vpc_id",
          "region"
        ],
        "title": "AwsVpnRequestNew"
      },
      "AzureAccessKey": {
        "properties": {
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "subscription_id": {
            "type": "string",
            "title": "Subscription Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "tenant_name",
          "tenant_id",
          "client_id",
          "client_secret",
          "subscription_id"
        ],
        "title": "AzureAccessKey"
      },
      "AzureAccessKeyCreateRequest": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "subscription_id": {
            "type": "string",
            "title": "Subscription Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "client_id",
          "client_secret",
          "subscription_id"
        ],
        "title": "AzureAccessKeyCreateRequest"
      },
      "AzureVpnRequest": {
        "properties": {
          "connection_name": {
            "type": "string",
            "title": "Connection Name"
          },
          "gate_name": {
            "type": "string",
            "title": "Gate Name"
          },
          "route_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Type"
          },
          "network_segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Network Segments",
            "default": []
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          },
          "vvi_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vvi Ip"
          },
          "resource_group_name": {
            "type": "string",
            "title": "Resource Group Name"
          },
          "vnet_name": {
            "type": "string",
            "title": "Vnet Name"
          },
          "region": {
            "type": "string",
            "title": "Region"
          }
        },
        "type": "object",
        "required": [
          "connection_name",
          "gate_name",
          "resource_group_name",
          "vnet_name",
          "region"
        ],
        "title": "AzureVpnRequest"
      },
      "BGPRouteMapRule": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "route_map_id": {
            "type": "integer",
            "title": "Route Map Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "action": {
            "$ref": "#/components/schemas/RouteMapAction"
          },
          "priority": {
            "type": "integer",
            "title": "Priority"
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/PfxListItem"
            },
            "type": "array",
            "title": "Filters",
            "default": []
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "id",
          "route_map_id",
          "name",
          "action",
          "priority"
        ],
        "title": "BGPRouteMapRule"
      },
      "BGPStatusData": {
        "properties": {
          "vrf_name": {
            "type": "string",
            "title": "Vrf Name"
          },
          "routed_id": {
            "type": "string",
            "title": "Routed Id"
          },
          "asn": {
            "type": "integer",
            "title": "Asn"
          },
          "peers": {
            "additionalProperties": true,
            "type": "object",
            "title": "Peers"
          }
        },
        "type": "object",
        "required": [
          "vrf_name",
          "routed_id",
          "asn",
          "peers"
        ],
        "title": "BGPStatusData"
      },
      "BGPSummeryGetResponse": {
        "properties": {
          "data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "BGPSummeryGetResponse"
      },
      "BaseAutonomousSystem": {
        "properties": {
          "asn": {
            "type": "integer",
            "title": "Asn"
          },
          "keepalive": {
            "type": "integer",
            "title": "Keepalive"
          },
          "hold": {
            "type": "integer",
            "title": "Hold"
          }
        },
        "type": "object",
        "required": [
          "asn",
          "keepalive",
          "hold"
        ],
        "title": "BaseAutonomousSystem"
      },
      "BfdConfig": {
        "properties": {
          "transmit_interval": {
            "type": "integer",
            "title": "Transmit Interval",
            "default": 0
          },
          "receive_interval": {
            "type": "integer",
            "title": "Receive Interval",
            "default": 0
          },
          "detect_multiplier": {
            "type": "integer",
            "title": "Detect Multiplier",
            "default": 0
          },
          "passive_mode": {
            "type": "boolean",
            "title": "Passive Mode",
            "default": false
          }
        },
        "type": "object",
        "title": "BfdConfig"
      },
      "BfdPeerData": {
        "properties": {
          "multihop": {
            "type": "boolean",
            "title": "Multihop"
          },
          "peer": {
            "type": "string",
            "title": "Peer"
          },
          "vrf": {
            "type": "string",
            "title": "Vrf"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "remote-id": {
            "type": "integer",
            "title": "Remote-Id"
          },
          "passive-mode": {
            "type": "boolean",
            "title": "Passive-Mode"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "downtime": {
            "type": "integer",
            "title": "Downtime",
            "default": 0
          },
          "uptime": {
            "type": "integer",
            "title": "Uptime",
            "default": 0
          },
          "diagnostic": {
            "type": "string",
            "title": "Diagnostic"
          },
          "remote-diagnostic": {
            "type": "string",
            "title": "Remote-Diagnostic"
          },
          "receive-interval": {
            "type": "integer",
            "title": "Receive-Interval"
          },
          "transmit-interval": {
            "type": "integer",
            "title": "Transmit-Interval"
          },
          "echo-receive-interval": {
            "type": "integer",
            "title": "Echo-Receive-Interval"
          },
          "echo-transmit-interval": {
            "type": "integer",
            "title": "Echo-Transmit-Interval"
          },
          "detect-multiplier": {
            "type": "integer",
            "title": "Detect-Multiplier"
          },
          "remote-receive-interval": {
            "type": "integer",
            "title": "Remote-Receive-Interval"
          },
          "remote-transmit-interval": {
            "type": "integer",
            "title": "Remote-Transmit-Interval"
          },
          "remote-echo-receive-interval": {
            "type": "integer",
            "title": "Remote-Echo-Receive-Interval"
          },
          "remote-detect-multiplier": {
            "type": "integer",
            "title": "Remote-Detect-Multiplier"
          }
        },
        "type": "object",
        "required": [
          "multihop",
          "peer",
          "vrf",
          "id",
          "remote-id",
          "passive-mode",
          "status",
          "diagnostic",
          "remote-diagnostic",
          "receive-interval",
          "transmit-interval",
          "echo-receive-interval",
          "echo-transmit-interval",
          "detect-multiplier",
          "remote-receive-interval",
          "remote-transmit-interval",
          "remote-echo-receive-interval",
          "remote-detect-multiplier"
        ],
        "title": "BfdPeerData"
      },
      "BgpFilteredReceivedRoutes": {
        "properties": {
          "bgpTableVersion": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bgptableversion"
          },
          "bgpLocalRouterId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bgplocalrouterid"
          },
          "defaultLocPrf": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Defaultlocprf"
          },
          "localAS": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Localas"
          },
          "receivedRoutes": {
            "additionalProperties": true,
            "type": "object",
            "title": "Receivedroutes"
          },
          "totalPrefixCounter": {
            "type": "integer",
            "title": "Totalprefixcounter"
          },
          "filteredPrefixCounter": {
            "type": "integer",
            "title": "Filteredprefixcounter"
          }
        },
        "type": "object",
        "required": [
          "bgpTableVersion",
          "bgpLocalRouterId",
          "defaultLocPrf",
          "localAS",
          "receivedRoutes",
          "totalPrefixCounter",
          "filteredPrefixCounter"
        ],
        "title": "BgpFilteredReceivedRoutes"
      },
      "BgpIpv4Status": {
        "properties": {
          "ipv4_unicast": {
            "items": {
              "$ref": "#/components/schemas/BGPStatusData"
            },
            "type": "array",
            "title": "Ipv4 Unicast"
          }
        },
        "type": "object",
        "required": [
          "ipv4_unicast"
        ],
        "title": "BgpIpv4Status"
      },
      "BgpReceivedRoutes": {
        "properties": {
          "vrfId": {
            "type": "integer",
            "title": "Vrfid"
          },
          "vrfName": {
            "type": "string",
            "title": "Vrfname"
          },
          "tableVersion": {
            "type": "integer",
            "title": "Tableversion"
          },
          "routerId": {
            "type": "string",
            "title": "Routerid"
          },
          "defaultLocPrf": {
            "type": "integer",
            "title": "Defaultlocprf"
          },
          "localAS": {
            "type": "integer",
            "title": "Localas"
          },
          "routes": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/RouteDetail"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Routes"
          }
        },
        "type": "object",
        "required": [
          "vrfId",
          "vrfName",
          "tableVersion",
          "routerId",
          "defaultLocPrf",
          "localAS",
          "routes"
        ],
        "title": "BgpReceivedRoutes"
      },
      "BgpRestType": {
        "type": "string",
        "enum": [
          "hard_reset",
          "reset",
          "soft_reset",
          "soft_in",
          "soft_out"
        ],
        "title": "BgpRestType"
      },
      "BgpStatus": {
        "properties": {
          "dia": {
            "$ref": "#/components/schemas/BgpIpv4Status"
          },
          "tenant": {
            "$ref": "#/components/schemas/BgpIpv4Status"
          }
        },
        "type": "object",
        "required": [
          "dia",
          "tenant"
        ],
        "title": "BgpStatus"
      },
      "BillingServiceType": {
        "type": "string",
        "enum": [
          "dpi",
          "sdr",
          "firewall",
          "dia_fw",
          "ddos",
          "ids",
          "dns",
          "fqdn",
          "tenant_service_package",
          "remote_user",
          "nat",
          "dia",
          "customer_port",
          "connection",
          "direct_connection",
          "cloud_router",
          "dia_connection",
          "direct_cloud_link",
          "cr_cloud_link",
          "direct_elan_connection"
        ],
        "title": "BillingServiceType"
      },
      "BlockPublicAccessStatesTypeDef": {
        "properties": {
          "InternetGatewayBlockMode": {
            "type": "string",
            "enum": [
              "block-bidirectional",
              "block-ingress",
              "off"
            ],
            "title": "Internetgatewayblockmode"
          }
        },
        "type": "object",
        "title": "BlockPublicAccessStatesTypeDef"
      },
      "CloudType": {
        "type": "string",
        "enum": [
          "aws",
          "gcp",
          "azure"
        ],
        "title": "CloudType"
      },
      "ConfigurationRequestStatus": {
        "type": "string",
        "enum": [
          "received",
          "in_progress",
          "success",
          "failed",
          "cancelled"
        ],
        "title": "ConfigurationRequestStatus"
      },
      "CreateNetworkObjectRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "subnets": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Subnets"
          },
          "ports": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Ports"
          }
        },
        "type": "object",
        "required": [
          "name",
          "subnets",
          "ports"
        ],
        "title": "CreateNetworkObjectRequest"
      },
      "CustomerToTermsAgreement": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "user_name": {
            "type": "string",
            "title": "User Name"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "related_service": {
            "type": "string",
            "title": "Related Service"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "signature_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signature Metadata"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "expiration_time": {
            "type": "string",
            "format": "date-time",
            "title": "Expiration Time"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "user_name",
          "related_service",
          "version",
          "id",
          "created_at",
          "expiration_time"
        ],
        "title": "CustomerToTermsAgreement"
      },
      "Days": {
        "type": "string",
        "enum": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ],
        "title": "Days"
      },
      "EVPNType": {
        "type": "string",
        "enum": [
          "UNSPECIFIED",
          "VXLAN_L2",
          "VXLAN_L3",
          "GENEVE_L2",
          "GENEVE_L3"
        ],
        "title": "EVPNType"
      },
      "EncryptionType": {
        "type": "string",
        "enum": [
          "3des",
          "aes128",
          "aes128gcm",
          "aes192",
          "aes256",
          "aes256gcm"
        ],
        "title": "EncryptionType"
      },
      "ExecutorResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ExecutorResponse"
      },
      "ExecutorResultResponse": {
        "properties": {
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "result": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result"
          }
        },
        "type": "object",
        "required": [
          "uuid",
          "status"
        ],
        "title": "ExecutorResultResponse"
      },
      "FilterType": {
        "type": "string",
        "enum": [
          "src_network",
          "dst_network",
          "src_l4_port",
          "dst_l4_port",
          "ip_protocol",
          "src_segment",
          "dst_segment",
          "src_object",
          "dst_object",
          "src_group",
          "dst_group",
          "ingress_vi",
          "tcp_control",
          "is_fragmented",
          "tos",
          "traffic_class",
          "ttl",
          "hop_limit",
          "ip_version",
          "src_dia",
          "dst_dia"
        ],
        "title": "FilterType"
      },
      "FirewallType": {
        "type": "string",
        "enum": [
          "firewall",
          "dia"
        ],
        "title": "FirewallType"
      },
      "FloodType": {
        "type": "string",
        "enum": [
          "all",
          "dynamic"
        ],
        "title": "FloodType"
      },
      "GateConfiguration": {
        "properties": {
          "bfd": {
            "$ref": "#/components/schemas/BfdConfig"
          }
        },
        "type": "object",
        "required": [
          "bfd"
        ],
        "title": "GateConfiguration"
      },
      "HAStatus": {
        "type": "string",
        "enum": [
          "auto",
          "manual",
          "disabled"
        ],
        "title": "HAStatus"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IPSecIDType": {
        "type": "string",
        "enum": [
          "ipv4",
          "fqdn",
          "email"
        ],
        "title": "IPSecIDType"
      },
      "Interconnect": {
        "properties": {
          "connection_name": {
            "type": "string",
            "title": "Connection Name"
          },
          "ASN": {
            "type": "integer",
            "title": "Asn"
          },
          "vlan": {
            "type": "integer",
            "title": "Vlan"
          },
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          },
          "cloud_type": {
            "$ref": "#/components/schemas/CloudType"
          },
          "bandwidth": {
            "type": "string",
            "title": "Bandwidth"
          },
          "cloud_identifier": {
            "type": "string",
            "title": "Cloud Identifier"
          }
        },
        "type": "object",
        "required": [
          "connection_name",
          "ASN",
          "vlan",
          "tenant_name",
          "cloud_type",
          "bandwidth",
          "cloud_identifier"
        ],
        "title": "Interconnect"
      },
      "InterfaceAdministrativeState": {
        "type": "string",
        "enum": [
          "unspecified",
          "up",
          "down"
        ],
        "title": "InterfaceAdministrativeState"
      },
      "InterfaceState": {
        "type": "string",
        "enum": [
          "up",
          "down"
        ],
        "title": "InterfaceState"
      },
      "IpFloodScopeType": {
        "type": "string",
        "enum": [
          "system_global",
          "tenant_global",
          "tenant_template",
          "tenant_private",
          "generated"
        ],
        "title": "IpFloodScopeType"
      },
      "ItemsList_BGPRouteMapRule_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BGPRouteMapRule"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[BGPRouteMapRule]"
      },
      "ItemsList_BfdPeerData_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BfdPeerData"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[BfdPeerData]"
      },
      "ItemsList_Interconnect_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Interconnect"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[Interconnect]"
      },
      "ItemsList_Location_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[Location]"
      },
      "ItemsList_NBASN_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBASN"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBASN]"
      },
      "ItemsList_NBBGPRouteMap_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBBGPRouteMap"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBBGPRouteMap]"
      },
      "ItemsList_NBBaseNATRule_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBBaseNATRule"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBBaseNATRule]"
      },
      "ItemsList_NBCustomerPortResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBCustomerPortResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBCustomerPortResponse]"
      },
      "ItemsList_NBEndPoint_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBEndPoint"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBEndPoint]"
      },
      "ItemsList_NBFirewallRuleResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBFirewallRuleResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBFirewallRuleResponse]"
      },
      "ItemsList_NBGroupResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBGroupResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBGroupResponse]"
      },
      "ItemsList_NBInterfaceTenantResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBInterfaceTenantResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBInterfaceTenantResponse]"
      },
      "ItemsList_NBNetworkSegmentResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBNetworkSegmentResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBNetworkSegmentResponse]"
      },
      "ItemsList_NBPBMRuleResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBPBMRuleResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBPBMRuleResponse]"
      },
      "ItemsList_NBPBRRuleResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBPBRRuleResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBPBRRuleResponse]"
      },
      "ItemsList_NBRequestResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBRequestResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBRequestResponse]"
      },
      "ItemsList_NBServiceItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBServiceItem"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBServiceItem]"
      },
      "ItemsList_NBStaticRouteResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBStaticRouteResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBStaticRouteResponse]"
      },
      "ItemsList_NBSystemResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBSystemResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBSystemResponse]"
      },
      "ItemsList_NBTenantAzureNNI_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBTenantAzureNNI"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBTenantAzureNNI]"
      },
      "ItemsList_NBTenantIpFlood_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBTenantIpFlood"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBTenantIpFlood]"
      },
      "ItemsList_NBTimePolicy_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBTimePolicy"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBTimePolicy]"
      },
      "ItemsList_NBVirtualInterfaceGateResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBVirtualInterfaceGateResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBVirtualInterfaceGateResponse]"
      },
      "ItemsList_NBVirtualInterfaceIPSECResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBVirtualInterfaceIPSECResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBVirtualInterfaceIPSECResponse]"
      },
      "ItemsList_NBVirtualInterfaceTenantResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBVirtualInterfaceTenantResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBVirtualInterfaceTenantResponse]"
      },
      "ItemsList_NBWGTunnel_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBWGTunnel"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NBWGTunnel]"
      },
      "ItemsList_NbMacTenantEntry_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NbMacTenantEntry"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NbMacTenantEntry]"
      },
      "ItemsList_NetworkObject_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NetworkObject"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[NetworkObject]"
      },
      "ItemsList_Policy_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Policy"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[Policy]"
      },
      "ItemsList_Site_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Site"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[Site]"
      },
      "ItemsList_TenantArpEntry_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/TenantArpEntry"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[TenantArpEntry]"
      },
      "ItemsList_TenantNotificationsResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/TenantNotificationsResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[TenantNotificationsResponse]"
      },
      "ItemsList_TenantRoute_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/TenantRoute"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[TenantRoute]"
      },
      "ItemsList_TermsAndConditions_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/TermsAndConditions"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[TermsAndConditions]"
      },
      "ItemsList_Union_NBAllVirtualInterfaceTenantResponse__NBAllVirtualInterfaceGateResponse__NBAllVirtualInterfaceIPSECResponse__": {
        "properties": {
          "items": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/NBAllVirtualInterfaceTenantResponse"
                },
                {
                  "$ref": "#/components/schemas/NBAllVirtualInterfaceGateResponse"
                },
                {
                  "$ref": "#/components/schemas/NBAllVirtualInterfaceIPSECResponse"
                }
              ]
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[Union[NBAllVirtualInterfaceTenantResponse, NBAllVirtualInterfaceGateResponse, NBAllVirtualInterfaceIPSECResponse]]"
      },
      "ItemsList_Union_NBNeighbor__NBDiaNeighbor__": {
        "properties": {
          "items": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/NBNeighbor"
                },
                {
                  "$ref": "#/components/schemas/NBDiaNeighbor"
                }
              ]
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ItemsList[Union[NBNeighbor, NBDiaNeighbor]]"
      },
      "KeycloakToken": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "KeycloakToken",
        "description": "Keycloak representation of a token object\n\nAttributes:\n    access_token (str): An access token"
      },
      "L2Labels": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "L2Labels"
      },
      "Location": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "default": ""
          },
          "longitude": {
            "type": "number",
            "title": "Longitude",
            "default": 0
          },
          "latitude": {
            "type": "number",
            "title": "Latitude",
            "default": 0
          }
        },
        "type": "object",
        "title": "Location"
      },
      "LocationType": {
        "type": "string",
        "enum": [
          "location",
          "system"
        ],
        "title": "LocationType"
      },
      "LookingGlassRequestResultParameters": {
        "properties": {
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "gate_vi_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gate Vi Name"
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          }
        },
        "type": "object",
        "required": [
          "uuid"
        ],
        "title": "LookingGlassRequestResultParameters"
      },
      "NATRuleType": {
        "type": "string",
        "enum": [
          "SOURCE_ONE_TO_ONE",
          "SOURCE_NAT",
          "DESTINATION_NAT",
          "NOP"
        ],
        "title": "NATRuleType"
      },
      "NATRuleUpdateData": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "outside": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outside"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "NATRuleUpdateData"
      },
      "NATSourceType": {
        "type": "string",
        "enum": [
          "segment",
          "ip"
        ],
        "title": "NATSourceType"
      },
      "NBASN": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Uuid"
          },
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          },
          "asn": {
            "type": "integer",
            "title": "Asn"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "approved": {
            "type": "boolean",
            "title": "Approved",
            "default": false
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name"
          },
          "group_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Name"
          },
          "peer_password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Peer Password"
          },
          "ipv4_prefix_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ipv4 Prefix List",
            "default": []
          },
          "ipv6_prefix_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ipv6 Prefix List",
            "default": []
          },
          "enriched_data": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enriched Data"
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          }
        },
        "type": "object",
        "required": [
          "id",
          "uuid",
          "tenant_name",
          "asn"
        ],
        "title": "NBASN"
      },
      "NBAWSAccessKey": {
        "properties": {
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          },
          "access_key_id": {
            "type": "string",
            "title": "Access Key Id"
          },
          "secret_access_key": {
            "type": "string",
            "title": "Secret Access Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "tenant_name",
          "access_key_id",
          "secret_access_key"
        ],
        "title": "NBAWSAccessKey"
      },
      "NBAWSRequest": {
        "properties": {
          "site_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Site Name"
          },
          "account_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Id"
          },
          "max_bandwidth": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AWSBandwidth"
              },
              {
                "type": "null"
              }
            ]
          },
          "aws_customer_port_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aws Customer Port Name"
          }
        },
        "type": "object",
        "title": "NBAWSRequest"
      },
      "NBAllVirtualInterfaceGateResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "virtual_interface_bridge_domain_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Bridge Domain Name"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/NBVirtualInterfaceMembers"
            },
            "type": "array",
            "title": "Members",
            "default": []
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_snat_service": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Snat Service"
          },
          "is_nat_service": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Nat Service"
          },
          "is_ipsec_service": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Ipsec Service"
          },
          "is_lb_service": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Lb Service"
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "operational_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ]
          },
          "ip_addresses": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Addresses",
            "default": []
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "is_dia": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Dia"
          },
          "asn": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asn"
          },
          "configuration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GateConfiguration"
              },
              {
                "type": "null"
              }
            ]
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "Virtual Interface gate"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "NBAllVirtualInterfaceGateResponse"
      },
      "NBAllVirtualInterfaceIPSECResponse": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uuid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "remote_ip": {
            "type": "string",
            "title": "Remote Ip"
          },
          "remote_networks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Remote Networks"
          },
          "local_networks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Local Networks"
          },
          "dh_groups": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Dh Groups"
          },
          "encryption": {
            "$ref": "#/components/schemas/EncryptionType"
          },
          "auth": {
            "$ref": "#/components/schemas/AuthType"
          },
          "psk": {
            "type": "string",
            "title": "Psk"
          },
          "passive": {
            "type": "boolean",
            "title": "Passive"
          },
          "udp_encap": {
            "type": "boolean",
            "title": "Udp Encap"
          },
          "nat_traversal": {
            "type": "boolean",
            "title": "Nat Traversal"
          },
          "local_id_type": {
            "$ref": "#/components/schemas/IPSecIDType"
          },
          "local_id_data": {
            "type": "string",
            "title": "Local Id Data"
          },
          "remote_id_type": {
            "$ref": "#/components/schemas/IPSecIDType"
          },
          "remote_id_data": {
            "type": "string",
            "title": "Remote Id Data"
          },
          "dead_peer_detection": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dead Peer Detection",
            "default": true
          },
          "dead_peer_detection_timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dead Peer Detection Timeout",
            "default": 30
          },
          "ike_version": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ike Version",
            "default": 2
          },
          "operational_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ],
            "default": "up"
          },
          "virtual_interface_gate_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Gate Name"
          },
          "network_segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Network Segments",
            "default": []
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          },
          "ip_addresses": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Addresses",
            "default": []
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "Virtual Interface IPSEC"
          }
        },
        "type": "object",
        "required": [
          "name",
          "tenant_name",
          "remote_ip",
          "remote_networks",
          "local_networks",
          "dh_groups",
          "encryption",
          "auth",
          "psk",
          "passive",
          "udp_encap",
          "nat_traversal",
          "local_id_type",
          "local_id_data",
          "remote_id_type",
          "remote_id_data"
        ],
        "title": "NBAllVirtualInterfaceIPSECResponse"
      },
      "NBAllVirtualInterfaceTenantResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "ip_addresses": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Addresses",
            "default": []
          },
          "mtu": {
            "type": "integer",
            "title": "Mtu",
            "default": 9220
          },
          "administrative_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ]
          },
          "operational_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/NBVirtualInterfaceMembers"
            },
            "type": "array",
            "title": "Members",
            "default": []
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "virtual_interface_type": {
            "$ref": "#/components/schemas/NBVirtualInterfaceType"
          },
          "up_members": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Up Members"
          },
          "total_members": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Members"
          },
          "network_segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Network Segments",
            "default": []
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "Virtual Interface Tenant Bridge Domain"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "virtual_interface_type"
        ],
        "title": "NBAllVirtualInterfaceTenantResponse"
      },
      "NBArubaConnectCreateRequest": {
        "properties": {
          "connection_name": {
            "type": "string",
            "title": "Connection Name"
          },
          "gw_name": {
            "type": "string",
            "title": "Gw Name"
          },
          "interface_name": {
            "type": "string",
            "title": "Interface Name"
          },
          "ne_pk": {
            "type": "string",
            "title": "Ne Pk"
          },
          "vi_ip_address": {
            "type": "string",
            "title": "Vi Ip Address"
          },
          "gw_ip": {
            "type": "string",
            "title": "Gw Ip"
          },
          "network_segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Network Segments",
            "default": []
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "connection_name",
          "gw_name",
          "interface_name",
          "ne_pk",
          "vi_ip_address",
          "gw_ip"
        ],
        "title": "NBArubaConnectCreateRequest"
      },
      "NBArubaDiscoverResponse": {
        "properties": {
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "gateways": {
            "items": {
              "$ref": "#/components/schemas/NBDiscoverDevice"
            },
            "type": "array",
            "title": "Gateways",
            "default": []
          }
        },
        "type": "object",
        "title": "NBArubaDiscoverResponse"
      },
      "NBAwsInterconnectCreateRequest": {
        "properties": {
          "connection_name": {
            "type": "string",
            "title": "Connection Name"
          },
          "ASN": {
            "type": "integer",
            "title": "Asn"
          },
          "vlan": {
            "type": "integer",
            "title": "Vlan"
          },
          "bandwidth": {
            "type": "string",
            "title": "Bandwidth"
          },
          "region": {
            "type": "string",
            "title": "Region"
          },
          "account_id": {
            "type": "string",
            "title": "Account Id"
          }
        },
        "type": "object",
        "required": [
          "connection_name",
          "ASN",
          "vlan",
          "bandwidth",
          "region",
          "account_id"
        ],
        "title": "NBAwsInterconnectCreateRequest"
      },
      "NBAzureInterconnectCreateRequest": {
        "properties": {
          "connection_name": {
            "type": "string",
            "title": "Connection Name"
          },
          "ASN": {
            "type": "integer",
            "title": "Asn"
          },
          "vlan": {
            "type": "integer",
            "title": "Vlan"
          },
          "bandwidth": {
            "type": "string",
            "title": "Bandwidth"
          },
          "resource_group": {
            "type": "string",
            "title": "Resource Group"
          },
          "circuit_name": {
            "type": "string",
            "title": "Circuit Name"
          }
        },
        "type": "object",
        "required": [
          "connection_name",
          "ASN",
          "vlan",
          "bandwidth",
          "resource_group",
          "circuit_name"
        ],
        "title": "NBAzureInterconnectCreateRequest"
      },
      "NBAzureRequest": {
        "properties": {
          "azure_customer_port_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Azure Customer Port Name"
          },
          "max_bandwidth": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Bandwidth"
          },
          "service_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Key"
          },
          "vlan_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vlan Id"
          },
          "administrative_state": {
            "$ref": "#/components/schemas/InterfaceState",
            "default": "up"
          }
        },
        "type": "object",
        "title": "NBAzureRequest"
      },
      "NBBGPRouteMap": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "is_global": {
            "type": "boolean",
            "title": "Is Global"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "pfx_list": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PfxListItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pfx List",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "is_global"
        ],
        "title": "NBBGPRouteMap"
      },
      "NBBGPRouteMapCreateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "pfx_list": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PfxListItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pfx List",
            "default": [
              {
                "ip": "0.0.0.0/0",
                "match": true,
                "seq": 5,
                "le": 32
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "NBBGPRouteMapCreateRequest"
      },
      "NBBGPRouteMapRuleCreateRequest": {
        "properties": {
          "pfx_list_name": {
            "type": "string",
            "title": "Pfx List Name"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "action": {
            "$ref": "#/components/schemas/RouteMapAction"
          },
          "priority": {
            "type": "integer",
            "title": "Priority"
          },
          "filters": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PfxListItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "pfx_list_name",
          "action",
          "priority"
        ],
        "title": "NBBGPRouteMapRuleCreateRequest"
      },
      "NBBaseNATRule": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "rule_type": {
            "$ref": "#/components/schemas/NATRuleType",
            "default": "SOURCE_ONE_TO_ONE"
          },
          "inside_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NATSourceType"
              },
              {
                "type": "null"
              }
            ]
          },
          "inside": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inside"
          },
          "inside_port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inside Port"
          },
          "protocol": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Protocol"
          },
          "outside": {
            "type": "string",
            "title": "Outside"
          },
          "outside_port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outside Port"
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/RuleFilter"
            },
            "type": "array",
            "title": "Filters",
            "default": []
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "outside"
        ],
        "title": "NBBaseNATRule"
      },
      "NBBgpResetUpdateRequest": {
        "properties": {
          "reset_type": {
            "$ref": "#/components/schemas/BgpRestType"
          }
        },
        "type": "object",
        "required": [
          "reset_type"
        ],
        "title": "NBBgpResetUpdateRequest"
      },
      "NBConnectionCreateRequest": {
        "properties": {
          "vi_name": {
            "type": "string",
            "title": "Vi Name"
          },
          "virtual_interface_type": {
            "$ref": "#/components/schemas/VirtualInterfaceType",
            "default": "routed"
          },
          "ip_addresses": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Addresses",
            "default": []
          },
          "mtu": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mtu"
          },
          "administrative_state": {
            "$ref": "#/components/schemas/InterfaceState",
            "default": "up"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "customer_ports_request": {
            "items": {
              "$ref": "#/components/schemas/NBCustomerPortRequest"
            },
            "type": "array",
            "title": "Customer Ports Request",
            "default": []
          },
          "azure_ports_request": {
            "items": {
              "$ref": "#/components/schemas/NBAzureRequest"
            },
            "type": "array",
            "title": "Azure Ports Request",
            "default": []
          },
          "aws_ports_request": {
            "items": {
              "$ref": "#/components/schemas/NBAWSRequest"
            },
            "type": "array",
            "title": "Aws Ports Request",
            "default": []
          },
          "gcp_ports_request": {
            "items": {
              "$ref": "#/components/schemas/NBGCPRequest"
            },
            "type": "array",
            "title": "Gcp Ports Request",
            "default": []
          },
          "internet": {
            "type": "boolean",
            "title": "Internet"
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "vi_name",
          "internet"
        ],
        "title": "NBConnectionCreateRequest"
      },
      "NBCreateASNRequest": {
        "properties": {
          "asn": {
            "type": "integer",
            "title": "Asn"
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          }
        },
        "type": "object",
        "required": [
          "asn"
        ],
        "title": "NBCreateASNRequest"
      },
      "NBCreateAutonomousSystemRequest": {
        "properties": {
          "asn": {
            "type": "integer",
            "title": "Asn"
          },
          "keepalive": {
            "type": "integer",
            "title": "Keepalive",
            "default": 60
          },
          "hold": {
            "type": "integer",
            "title": "Hold",
            "default": 180
          }
        },
        "type": "object",
        "required": [
          "asn"
        ],
        "title": "NBCreateAutonomousSystemRequest"
      },
      "NBCreateBGPNeighborRequest": {
        "properties": {
          "remote_asn": {
            "type": "integer",
            "title": "Remote Asn"
          },
          "remote_router_ip": {
            "type": "string",
            "title": "Remote Router Ip"
          },
          "update_source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Update Source"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "passive": {
            "type": "boolean",
            "title": "Passive",
            "default": false
          },
          "pfx_list_in": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pfx List In"
          },
          "pfx_list_out": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pfx List Out"
          },
          "max_pfx_in": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 0.0,
            "title": "Max Pfx In",
            "default": 1000
          },
          "max_pfx_out": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 0.0,
            "title": "Max Pfx Out",
            "default": 1000
          },
          "keepalive": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keepalive"
          },
          "hold": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hold"
          },
          "open_delay": {
            "type": "integer",
            "title": "Open Delay",
            "default": 0
          },
          "shutdown": {
            "type": "boolean",
            "title": "Shutdown",
            "default": false
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "bfd_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BfdConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "enable": {
            "type": "boolean",
            "title": "Enable",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "remote_asn",
          "remote_router_ip"
        ],
        "title": "NBCreateBGPNeighborRequest"
      },
      "NBCreateEnabledServiceRequest": {
        "properties": {
          "services": {
            "items": {
              "$ref": "#/components/schemas/Service"
            },
            "type": "array",
            "title": "Services"
          }
        },
        "type": "object",
        "required": [
          "services"
        ],
        "title": "NBCreateEnabledServiceRequest"
      },
      "NBCreateFirewallRuleDiaRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 1
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/RuleFilter"
            },
            "type": "array",
            "title": "Filters",
            "default": []
          },
          "forwarding_policy": {
            "$ref": "#/components/schemas/NBForwardingPolicy",
            "default": "ALLOW"
          },
          "enable": {
            "type": "boolean",
            "title": "Enable",
            "default": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories",
            "default": []
          },
          "allowed_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Domains",
            "default": []
          },
          "denied_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied Domains",
            "default": []
          },
          "policy_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Policy Name"
          },
          "time_policies_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Policies Names",
            "default": []
          },
          "gate_vi_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gate Vi Name"
          },
          "gate_vi_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gate Vi Names",
            "default": []
          },
          "force_all_gw": {
            "type": "boolean",
            "title": "Force All Gw",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "NBCreateFirewallRuleDiaRequest"
      },
      "NBCreateFirewallRuleRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 1
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/RuleFilter"
            },
            "type": "array",
            "title": "Filters",
            "default": []
          },
          "forwarding_policy": {
            "$ref": "#/components/schemas/NBForwardingPolicy",
            "default": "ALLOW"
          },
          "enable": {
            "type": "boolean",
            "title": "Enable",
            "default": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories",
            "default": []
          },
          "allowed_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Domains",
            "default": []
          },
          "denied_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied Domains",
            "default": []
          },
          "policy_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Policy Name"
          },
          "time_policies_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Policies Names",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "NBCreateFirewallRuleRequest"
      },
      "NBCreateNATRuleRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "rule_type": {
            "$ref": "#/components/schemas/NATRuleType",
            "default": "SOURCE_ONE_TO_ONE"
          },
          "inside_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NATSourceType"
              },
              {
                "type": "null"
              }
            ]
          },
          "inside": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inside"
          },
          "inside_port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inside Port"
          },
          "protocol": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Protocol"
          },
          "outside": {
            "type": "string",
            "title": "Outside"
          },
          "outside_port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outside Port"
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/RuleFilter"
            },
            "type": "array",
            "title": "Filters",
            "default": []
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name",
          "outside"
        ],
        "title": "NBCreateNATRuleRequest"
      },
      "NBCreatePBMRuleRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 1
          },
          "enable": {
            "type": "boolean",
            "title": "Enable",
            "default": true
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/RuleFilter"
            },
            "type": "array",
            "title": "Filters",
            "default": []
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "unit": {
            "$ref": "#/components/schemas/PBMMeteringUnits",
            "default": "kps"
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name",
          "count"
        ],
        "title": "NBCreatePBMRuleRequest"
      },
      "NBCreatePBRRuleRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 1
          },
          "enable": {
            "type": "boolean",
            "title": "Enable",
            "default": true
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/RuleFilter"
            },
            "type": "array",
            "title": "Filters",
            "default": []
          },
          "gateway_ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway Ip Address"
          },
          "gateway_interface": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway Interface"
          },
          "gateway_MAC": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway Mac"
          },
          "action": {
            "$ref": "#/components/schemas/PBRAction",
            "default": "ROUTE"
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "NBCreatePBRRuleRequest"
      },
      "NBCreateStaticRouteRequest": {
        "properties": {
          "destination": {
            "type": "string",
            "title": "Destination"
          },
          "gateway_ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway Ip Address"
          },
          "gateway_interface": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway Interface"
          },
          "enable": {
            "type": "boolean",
            "title": "Enable",
            "default": true
          },
          "distance": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Distance",
            "default": 1
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "destination"
        ],
        "title": "NBCreateStaticRouteRequest"
      },
      "NBCreateTenantGroupRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "subnets": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Subnets",
            "default": []
          },
          "users": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Users",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "NBCreateTenantGroupRequest"
      },
      "NBCustomerPortRequest": {
        "properties": {
          "vlan_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vlan Id"
          },
          "max_bandwidth": {
            "type": "integer",
            "title": "Max Bandwidth",
            "default": 0
          },
          "customer_port_name": {
            "type": "string",
            "title": "Customer Port Name"
          }
        },
        "type": "object",
        "required": [
          "customer_port_name"
        ],
        "title": "NBCustomerPortRequest"
      },
      "NBCustomerPortResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Uuid"
          },
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          },
          "system_name": {
            "type": "string",
            "title": "System Name"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "l2_parent_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "L2 Parent Name"
          },
          "requested_bw": {
            "type": "integer",
            "title": "Requested Bw"
          },
          "assigned_bw": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned Bw"
          },
          "used_bw": {
            "type": "integer",
            "title": "Used Bw",
            "default": 0
          },
          "request_status": {
            "type": "string",
            "title": "Request Status"
          },
          "user_name": {
            "type": "string",
            "title": "User Name"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          }
        },
        "type": "object",
        "required": [
          "id",
          "uuid",
          "tenant_name",
          "system_name",
          "name",
          "requested_bw",
          "request_status",
          "user_name",
          "type"
        ],
        "title": "NBCustomerPortResponse"
      },
      "NBCustomerToTermsCreateRequest": {
        "properties": {
          "signature_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signature Metadata"
          },
          "related_service": {
            "type": "string",
            "title": "Related Service"
          },
          "terms_id": {
            "type": "integer",
            "title": "Terms Id"
          },
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          }
        },
        "type": "object",
        "required": [
          "related_service",
          "terms_id",
          "service_id"
        ],
        "title": "NBCustomerToTermsCreateRequest"
      },
      "NBDIACreateRequest": {
        "properties": {
          "system_name": {
            "type": "string",
            "title": "System Name"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "ipv4_prefix_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ipv4 Prefix Length"
          },
          "ipv6_prefix_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ipv6 Prefix Length"
          },
          "ipsec_service": {
            "type": "boolean",
            "title": "Ipsec Service"
          },
          "nat_service": {
            "type": "boolean",
            "title": "Nat Service"
          },
          "snat_service": {
            "type": "boolean",
            "title": "Snat Service"
          },
          "shared": {
            "type": "boolean",
            "title": "Shared"
          },
          "ip_addresses": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Addresses"
          },
          "bgp_asn": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bgp Asn"
          },
          "administrative_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceAdministrativeState"
              },
              {
                "type": "null"
              }
            ]
          },
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "bfd_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BfdConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "system_name",
          "name",
          "ipsec_service",
          "nat_service",
          "snat_service",
          "shared"
        ],
        "title": "NBDIACreateRequest"
      },
      "NBDefaultVirtualInterfaceIPSECCreateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 63,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "title": "Name"
          },
          "remote_ip": {
            "type": "string",
            "title": "Remote Ip"
          },
          "remote_networks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Remote Networks"
          },
          "local_networks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Local Networks"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "virtual_interface_gate_name": {
            "type": "string",
            "title": "Virtual Interface Gate Name"
          },
          "network_segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Network Segments",
            "default": []
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "name",
          "remote_ip",
          "remote_networks",
          "local_networks",
          "virtual_interface_gate_name"
        ],
        "title": "NBDefaultVirtualInterfaceIPSECCreateRequest"
      },
      "NBDeleteStaticRouteRequest": {
        "properties": {
          "destination": {
            "type": "string",
            "title": "Destination"
          },
          "enable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable"
          },
          "gateway_ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway Ip Address"
          },
          "gateway_interface": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway Interface"
          }
        },
        "type": "object",
        "required": [
          "destination"
        ],
        "title": "NBDeleteStaticRouteRequest"
      },
      "NBDiaAutonomousSystem": {
        "properties": {
          "asn": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asn"
          }
        },
        "type": "object",
        "title": "NBDiaAutonomousSystem"
      },
      "NBDiaNeighbor": {
        "properties": {
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          },
          "remote_router_ip": {
            "type": "string",
            "title": "Remote Router Ip"
          },
          "remote_asn": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remote Asn"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "passive": {
            "type": "boolean",
            "title": "Passive",
            "default": false
          },
          "keepalive": {
            "type": "integer",
            "title": "Keepalive",
            "default": 60
          },
          "hold": {
            "type": "integer",
            "title": "Hold",
            "default": 180
          },
          "open_delay": {
            "type": "integer",
            "title": "Open Delay",
            "default": 0
          },
          "shutdown": {
            "type": "boolean",
            "title": "Shutdown",
            "default": false
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "autonomous_system": {
            "$ref": "#/components/schemas/NBDiaAutonomousSystem"
          },
          "connected_vi": {
            "type": "string",
            "title": "Connected Vi"
          },
          "is_dia": {
            "type": "boolean",
            "title": "Is Dia",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "tenant_name",
          "remote_router_ip",
          "autonomous_system",
          "connected_vi"
        ],
        "title": "NBDiaNeighbor"
      },
      "NBDiscoverDevice": {
        "properties": {
          "host_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Host Name"
          },
          "ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip"
          },
          "device_country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Country"
          },
          "device_city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device City"
          },
          "ne_pk": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ne Pk"
          },
          "interface_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interface Data"
          }
        },
        "type": "object",
        "title": "NBDiscoverDevice"
      },
      "NBDuplicateIpFloodDiaRequest": {
        "properties": {
          "option": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Option"
          },
          "gate_vi_name": {
            "type": "string",
            "title": "Gate Vi Name"
          },
          "prefix": {
            "type": "string",
            "title": "Prefix"
          }
        },
        "type": "object",
        "required": [
          "gate_vi_name",
          "prefix"
        ],
        "title": "NBDuplicateIpFloodDiaRequest"
      },
      "NBEnabledServiceResponse": {
        "properties": {
          "services": {
            "items": {
              "$ref": "#/components/schemas/Service"
            },
            "type": "array",
            "title": "Services"
          }
        },
        "type": "object",
        "required": [
          "services"
        ],
        "title": "NBEnabledServiceResponse"
      },
      "NBEndPoint": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "endpoint_host": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Host"
          },
          "shared": {
            "type": "boolean",
            "title": "Shared",
            "default": false
          },
          "location_name": {
            "type": "string",
            "title": "Location Name"
          },
          "location_long": {
            "type": "string",
            "title": "Location Long"
          },
          "location_lat": {
            "type": "string",
            "title": "Location Lat"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "remote_pe_loopback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remote Pe Loopback"
          },
          "nearest_pe_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nearest Pe Name"
          },
          "nearest_nsos_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nearest Nsos Name"
          },
          "vlan_free": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Vlan Free",
            "default": []
          },
          "nnis": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/NBNNI"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nnis",
            "default": []
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          }
        },
        "type": "object",
        "required": [
          "name",
          "location_name",
          "location_long",
          "location_lat"
        ],
        "title": "NBEndPoint"
      },
      "NBFirewallRuleResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "user_ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Ip Address"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 1
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/RuleFilter"
            },
            "type": "array",
            "title": "Filters",
            "default": []
          },
          "forwarding_policy": {
            "$ref": "#/components/schemas/NBForwardingPolicy",
            "default": "ALLOW"
          },
          "enable": {
            "type": "boolean",
            "title": "Enable"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories",
            "default": []
          },
          "allowed_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Domains"
          },
          "denied_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied Domains"
          },
          "policy_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Policy Name"
          },
          "time_policies": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/NBTimePolicy"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Policies",
            "default": []
          },
          "gate_vi_names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Gate Vi Names",
            "default": []
          },
          "gate_vi_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gate Vi Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "enable"
        ],
        "title": "NBFirewallRuleResponse"
      },
      "NBForwardingPolicy": {
        "type": "string",
        "enum": [
          "ACCEPT",
          "DROP",
          "ALLOW",
          "DENY",
          "ALLOW_WITH_BLOCKED_SNI",
          "ALLOW_ONLY_SELECTED_SNIS"
        ],
        "title": "NBForwardingPolicy"
      },
      "NBGCPInterconnectCreateRequest": {
        "properties": {
          "connection_name": {
            "type": "string",
            "title": "Connection Name"
          },
          "ASN": {
            "type": "integer",
            "title": "Asn"
          },
          "vlan": {
            "type": "integer",
            "title": "Vlan"
          },
          "bandwidth": {
            "type": "string",
            "title": "Bandwidth"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          }
        },
        "type": "object",
        "required": [
          "connection_name",
          "ASN",
          "vlan",
          "bandwidth",
          "project_id"
        ],
        "title": "NBGCPInterconnectCreateRequest"
      },
      "NBGCPRequest": {
        "properties": {
          "customer_port_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Port Name"
          },
          "max_bandwidth": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Bandwidth"
          },
          "region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "primary_pairing_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary Pairing Key"
          },
          "secondary_pairing_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secondary Pairing Key"
          }
        },
        "type": "object",
        "title": "NBGCPRequest"
      },
      "NBGroupResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "users": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Users"
          },
          "subnets": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subnets"
          },
          "ip_addresses": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Addresses"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "NBGroupResponse"
      },
      "NBInterfaceTenantResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "mtu": {
            "type": "integer",
            "title": "Mtu",
            "default": 9220
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "operational_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "virtual_interface_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Id"
          },
          "virtual_interface_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Name"
          },
          "trunk": {
            "type": "boolean",
            "title": "Trunk",
            "default": false
          },
          "parent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent"
          },
          "vlan_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vlan Id"
          },
          "labels": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/L2Labels"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "NBInterfaceTenantResponse"
      },
      "NBMaxBandwidthResponse": {
        "properties": {
          "max_bandwidth": {
            "type": "integer",
            "title": "Max Bandwidth"
          }
        },
        "type": "object",
        "required": [
          "max_bandwidth"
        ],
        "title": "NBMaxBandwidthResponse"
      },
      "NBNNI": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "endpoint_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Name"
          },
          "connected_nni_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connected Nni Id"
          },
          "speed": {
            "type": "integer",
            "title": "Speed"
          },
          "allocated": {
            "type": "integer",
            "title": "Allocated"
          },
          "max_good_subscription": {
            "type": "number",
            "title": "Max Good Subscription"
          },
          "max_over_subscription": {
            "type": "number",
            "title": "Max Over Subscription"
          },
          "thresholds": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/NBThreshold"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thresholds",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name",
          "speed",
          "allocated",
          "max_good_subscription",
          "max_over_subscription"
        ],
        "title": "NBNNI"
      },
      "NBNeighbor": {
        "properties": {
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "remote_router_ip": {
            "type": "string",
            "title": "Remote Router Ip"
          },
          "remote_asn": {
            "type": "integer",
            "title": "Remote Asn"
          },
          "update_source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Update Source"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "passive": {
            "type": "boolean",
            "title": "Passive",
            "default": false
          },
          "route_map_in_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Map In Id"
          },
          "route_map_out_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Map Out Id"
          },
          "max_pfx_in": {
            "type": "integer",
            "title": "Max Pfx In"
          },
          "max_pfx_out": {
            "type": "integer",
            "title": "Max Pfx Out"
          },
          "keepalive": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keepalive"
          },
          "hold": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hold"
          },
          "open_delay": {
            "type": "integer",
            "title": "Open Delay"
          },
          "shutdown": {
            "type": "boolean",
            "title": "Shutdown"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "bfd_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BfdConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "enable": {
            "type": "boolean",
            "title": "Enable",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "autonomous_system_id": {
            "type": "integer",
            "title": "Autonomous System Id"
          },
          "autonomous_system": {
            "$ref": "#/components/schemas/AutonomousSystem"
          },
          "connected_vi": {
            "type": "string",
            "title": "Connected Vi",
            "default": ""
          },
          "pfx_list_in": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pfx List In"
          },
          "pfx_list_out": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pfx List Out"
          },
          "is_dia": {
            "type": "boolean",
            "title": "Is Dia",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "remote_router_ip",
          "remote_asn",
          "max_pfx_in",
          "max_pfx_out",
          "open_delay",
          "shutdown",
          "id",
          "autonomous_system_id",
          "autonomous_system"
        ],
        "title": "NBNeighbor"
      },
      "NBNeighborUpdateData": {
        "properties": {
          "pfx_list_in": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pfx List In"
          },
          "pfx_list_out": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pfx List Out"
          },
          "passive": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Passive"
          },
          "update_source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Update Source"
          },
          "max_pfx_in": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Pfx In"
          },
          "max_pfx_out": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Pfx Out"
          },
          "keepalive": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keepalive"
          },
          "hold": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hold"
          },
          "open_delay": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Open Delay"
          },
          "shutdown": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shutdown"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "bfd_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BfdConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "enable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable"
          }
        },
        "type": "object",
        "required": [
          "max_pfx_in",
          "max_pfx_out"
        ],
        "title": "NBNeighborUpdateData"
      },
      "NBNetworkSegmentResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "prefixes": {
            "items": {
              "$ref": "#/components/schemas/NetworkSegmentPrefix"
            },
            "type": "array",
            "title": "Prefixes"
          }
        },
        "type": "object",
        "required": [
          "name",
          "prefixes"
        ],
        "title": "NBNetworkSegmentResponse"
      },
      "NBNetworkSegmentUpdateDataRequest": {
        "properties": {
          "delete_prefixes": {
            "items": {
              "$ref": "#/components/schemas/NetworkSegmentPrefix"
            },
            "type": "array",
            "title": "Delete Prefixes",
            "default": []
          }
        },
        "type": "object",
        "title": "NBNetworkSegmentUpdateDataRequest"
      },
      "NBPBMRuleResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 1
          },
          "enable": {
            "type": "boolean",
            "title": "Enable",
            "default": true
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/RuleFilter"
            },
            "type": "array",
            "title": "Filters",
            "default": []
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "unit": {
            "$ref": "#/components/schemas/PBMMeteringUnits"
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "count",
          "unit",
          "labels"
        ],
        "title": "NBPBMRuleResponse"
      },
      "NBPBRRuleResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          },
          "vrf_name": {
            "type": "string",
            "title": "Vrf Name"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 1
          },
          "enable": {
            "type": "boolean",
            "title": "Enable",
            "default": true
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/RuleFilter"
            },
            "type": "array",
            "title": "Filters",
            "default": []
          },
          "gateway_ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway Ip Address"
          },
          "gateway_interface": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway Interface"
          },
          "gateway_MAC": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway Mac"
          },
          "gateway_vrf_name": {
            "type": "string",
            "title": "Gateway Vrf Name"
          },
          "action": {
            "$ref": "#/components/schemas/PBRAction",
            "default": "ROUTE"
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "tenant_name",
          "vrf_name",
          "gateway_vrf_name",
          "labels"
        ],
        "title": "NBPBRRuleResponse"
      },
      "NBPolicyCreateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "forwarding_policy": {
            "$ref": "#/components/schemas/NBForwardingPolicy",
            "default": "ALLOW"
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Categories",
            "default": []
          },
          "allowed_domains": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Allowed Domains",
            "default": []
          },
          "denied_domains": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Denied Domains",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "NBPolicyCreateRequest"
      },
      "NBPolicyUpdateRequest": {
        "properties": {
          "forwarding_policy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NBForwardingPolicy"
              },
              {
                "type": "null"
              }
            ]
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories"
          },
          "add_categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add Categories"
          },
          "remove_categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Categories"
          },
          "allowed_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Domains"
          },
          "add_allowed_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add Allowed Domains"
          },
          "remove_allowed_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Allowed Domains"
          },
          "denied_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied Domains"
          },
          "add_denied_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add Denied Domains"
          },
          "remove_denied_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Denied Domains"
          }
        },
        "type": "object",
        "title": "NBPolicyUpdateRequest"
      },
      "NBPortInterfaceResponse": {
        "properties": {
          "administrative_state": {
            "$ref": "#/components/schemas/InterfaceState",
            "default": "up"
          },
          "mtu": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mtu"
          },
          "max_bandwidth": {
            "type": "integer",
            "title": "Max Bandwidth",
            "default": 0
          },
          "virtual_interface_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Id"
          },
          "virtual_interface_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Name"
          },
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "labels": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/L2Labels"
              },
              {
                "type": "null"
              }
            ]
          },
          "customer_port_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Port Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "operational_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ]
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "physical_port_name": {
            "type": "string",
            "title": "Physical Port Name"
          },
          "trunk": {
            "type": "boolean",
            "title": "Trunk",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "physical_port_name"
        ],
        "title": "NBPortInterfaceResponse"
      },
      "NBPortVLANInterfaceResponse": {
        "properties": {
          "administrative_state": {
            "$ref": "#/components/schemas/InterfaceState",
            "default": "up"
          },
          "mtu": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mtu"
          },
          "max_bandwidth": {
            "type": "integer",
            "title": "Max Bandwidth",
            "default": 0
          },
          "virtual_interface_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Id"
          },
          "virtual_interface_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Name"
          },
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "labels": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/L2Labels"
              },
              {
                "type": "null"
              }
            ]
          },
          "customer_port_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Port Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "operational_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ]
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "physical_port_name": {
            "type": "string",
            "title": "Physical Port Name"
          },
          "vlan_id": {
            "type": "integer",
            "title": "Vlan Id"
          },
          "trunk": {
            "type": "boolean",
            "title": "Trunk",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "physical_port_name",
          "vlan_id"
        ],
        "title": "NBPortVLANInterfaceResponse"
      },
      "NBPublicIPCreateRequest": {
        "properties": {
          "system_name": {
            "type": "string",
            "title": "System Name"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/PublicIPType"
          },
          "data": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "ipsec_service": {
            "type": "boolean",
            "title": "Ipsec Service"
          },
          "nat_service": {
            "type": "boolean",
            "title": "Nat Service"
          },
          "snat_service": {
            "type": "boolean",
            "title": "Snat Service"
          },
          "shared": {
            "type": "boolean",
            "title": "Shared"
          }
        },
        "type": "object",
        "required": [
          "system_name",
          "name",
          "type",
          "ipsec_service",
          "nat_service",
          "snat_service",
          "shared"
        ],
        "title": "NBPublicIPCreateRequest"
      },
      "NBQINQPortVLANInterfaceResponse": {
        "properties": {
          "administrative_state": {
            "$ref": "#/components/schemas/InterfaceState",
            "default": "up"
          },
          "mtu": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mtu"
          },
          "max_bandwidth": {
            "type": "integer",
            "title": "Max Bandwidth",
            "default": 0
          },
          "virtual_interface_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Id"
          },
          "virtual_interface_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Name"
          },
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "labels": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/L2Labels"
              },
              {
                "type": "null"
              }
            ]
          },
          "customer_port_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Port Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "operational_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ]
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "physical_port_name": {
            "type": "string",
            "title": "Physical Port Name"
          },
          "vlan_stag_id": {
            "type": "integer",
            "title": "Vlan Stag Id"
          },
          "vlan_ctag_id": {
            "type": "integer",
            "title": "Vlan Ctag Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "physical_port_name",
          "vlan_stag_id",
          "vlan_ctag_id"
        ],
        "title": "NBQINQPortVLANInterfaceResponse"
      },
      "NBRequestCustomerPortRequest": {
        "properties": {
          "system_name": {
            "type": "string",
            "title": "System Name"
          },
          "max_bandwidth": {
            "type": "integer",
            "title": "Max Bandwidth",
            "default": 0
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "system_name",
          "name"
        ],
        "title": "NBRequestCustomerPortRequest"
      },
      "NBRequestResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "status": {
            "$ref": "#/components/schemas/ConfigurationRequestStatus"
          },
          "extra_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Details"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "status"
        ],
        "title": "NBRequestResponse"
      },
      "NBSDR": {
        "properties": {
          "is_enable": {
            "type": "boolean",
            "title": "Is Enable"
          },
          "rate": {
            "type": "integer",
            "title": "Rate"
          }
        },
        "type": "object",
        "required": [
          "is_enable",
          "rate"
        ],
        "title": "NBSDR"
      },
      "NBServiceItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "product": {
            "type": "string",
            "title": "Product"
          },
          "enable": {
            "type": "boolean",
            "title": "Enable"
          },
          "operator": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operator"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "base_quantity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Quantity"
          },
          "base_unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Unit"
          },
          "monthly_recurring_charge": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ServicePrice"
              },
              {
                "type": "null"
              }
            ]
          },
          "non_recurring_charge": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ServicePrice"
              },
              {
                "type": "null"
              }
            ]
          },
          "contract_period": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contract Period"
          },
          "billing_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Billing Type"
          },
          "additional_price": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ServicePrice"
              },
              {
                "type": "null"
              }
            ]
          },
          "additional_unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Unit"
          },
          "discount": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount"
          },
          "customer_package": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Package"
          }
        },
        "type": "object",
        "required": [
          "id",
          "product",
          "enable"
        ],
        "title": "NBServiceItem"
      },
      "NBServicesPackage": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "is_firewall_service": {
            "type": "boolean",
            "title": "Is Firewall Service",
            "default": true
          },
          "is_nat_service": {
            "type": "boolean",
            "title": "Is Nat Service",
            "default": true
          },
          "is_ids_service": {
            "type": "boolean",
            "title": "Is Ids Service",
            "default": true
          },
          "is_dns_service": {
            "type": "boolean",
            "title": "Is Dns Service",
            "default": true
          },
          "is_dia_fw_service": {
            "type": "boolean",
            "title": "Is Dia Fw Service",
            "default": true
          },
          "is_ddos_service": {
            "type": "boolean",
            "title": "Is Ddos Service",
            "default": false
          },
          "is_segments_service": {
            "type": "boolean",
            "title": "Is Segments Service",
            "default": true
          },
          "is_remote_users_service": {
            "type": "boolean",
            "title": "Is Remote Users Service",
            "default": true
          },
          "is_fqdn_service": {
            "type": "boolean",
            "title": "Is Fqdn Service",
            "default": true
          },
          "is_load_balancing_service": {
            "type": "boolean",
            "title": "Is Load Balancing Service",
            "default": false
          },
          "is_secure_web_gw_service": {
            "type": "boolean",
            "title": "Is Secure Web Gw Service",
            "default": false
          },
          "is_sdr_service": {
            "type": "boolean",
            "title": "Is Sdr Service",
            "default": false
          },
          "is_mesh_enabled": {
            "type": "boolean",
            "title": "Is Mesh Enabled",
            "default": false
          },
          "is_visible": {
            "type": "boolean",
            "title": "Is Visible",
            "default": false
          },
          "labels": {
            "$ref": "#/components/schemas/ServicesPackageLabels"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "labels"
        ],
        "title": "NBServicesPackage"
      },
      "NBStaticRouteResponse": {
        "properties": {
          "destination": {
            "type": "string",
            "title": "Destination"
          },
          "enable": {
            "type": "boolean",
            "title": "Enable"
          },
          "gateway_ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway Ip Address"
          },
          "gateway_interface": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway Interface"
          },
          "distance": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Distance"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "destination",
          "enable",
          "distance"
        ],
        "title": "NBStaticRouteResponse"
      },
      "NBSystemResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "active_node": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Node"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "wg_conf": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wg Conf",
            "default": {}
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/Node"
            },
            "type": "array",
            "title": "Nodes"
          }
        },
        "type": "object",
        "required": [
          "name",
          "status",
          "location",
          "nodes"
        ],
        "title": "NBSystemResponse"
      },
      "NBTenantAWSDirectConnectCreateRequest": {
        "properties": {
          "vi_name": {
            "type": "string",
            "title": "Vi Name"
          },
          "site_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Site Name"
          },
          "account_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Id"
          },
          "max_bandwidth": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AWSBandwidth"
              },
              {
                "type": "null"
              }
            ]
          },
          "aws_customer_port_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aws Customer Port Name"
          }
        },
        "type": "object",
        "required": [
          "vi_name"
        ],
        "title": "NBTenantAWSDirectConnectCreateRequest"
      },
      "NBTenantAzureNNI": {
        "properties": {
          "nni_id": {
            "type": "string",
            "title": "Nni Id"
          },
          "peering_location": {
            "type": "string",
            "title": "Peering Location"
          }
        },
        "type": "object",
        "required": [
          "nni_id",
          "peering_location"
        ],
        "title": "NBTenantAzureNNI"
      },
      "NBTenantIPAM": {
        "properties": {
          "available_prefixes": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Available Prefixes"
          }
        },
        "type": "object",
        "required": [
          "available_prefixes"
        ],
        "title": "NBTenantIPAM"
      },
      "NBTenantIpFlood": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "enable": {
            "type": "boolean",
            "title": "Enable",
            "default": true
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "scope_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IpFloodScopeType"
              },
              {
                "type": "null"
              }
            ]
          },
          "options": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/NBTenantIpFloodOptionData"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Options"
          },
          "selected_option": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NBTenantIpFloodOptionData"
              },
              {
                "type": "null"
              }
            ]
          },
          "gate_vi_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gate Vi Name"
          },
          "is_customize": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Customize"
          },
          "prefix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prefix"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "NBTenantIpFlood"
      },
      "NBTenantIpFloodOptionData": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          }
        },
        "type": "object",
        "title": "NBTenantIpFloodOptionData"
      },
      "NBTenantL2CreateRequest": {
        "properties": {
          "vi_name": {
            "type": "string",
            "title": "Vi Name"
          },
          "vlan_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vlan Id"
          },
          "max_bandwidth": {
            "type": "integer",
            "title": "Max Bandwidth",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "vi_name"
        ],
        "title": "NBTenantL2CreateRequest"
      },
      "NBTenantL2UpdateRequest": {
        "properties": {
          "max_bandwidth": {
            "type": "integer",
            "title": "Max Bandwidth",
            "default": 0
          }
        },
        "type": "object",
        "title": "NBTenantL2UpdateRequest"
      },
      "NBTenantUpdateASNRequest": {
        "properties": {
          "labels": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          }
        },
        "type": "object",
        "title": "NBTenantUpdateASNRequest"
      },
      "NBTenantUser": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_remote_user": {
            "type": "boolean",
            "title": "Is Remote User",
            "default": false
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "password_is_expired": {
            "type": "boolean",
            "title": "Password Is Expired"
          },
          "remaining_failed_attempts": {
            "type": "integer",
            "title": "Remaining Failed Attempts"
          },
          "user_groups": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Groups"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "enabled",
          "password_is_expired",
          "remaining_failed_attempts"
        ],
        "title": "NBTenantUser"
      },
      "NBThreshold": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nni_id": {
            "type": "integer",
            "title": "Nni Id"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          },
          "percentage": {
            "type": "integer",
            "title": "Percentage"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "severity": {
            "type": "string",
            "title": "Severity"
          }
        },
        "type": "object",
        "required": [
          "name",
          "nni_id",
          "condition",
          "percentage",
          "message",
          "severity"
        ],
        "title": "NBThreshold"
      },
      "NBTimePolicy": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "action": {
            "$ref": "#/components/schemas/TimePolicyActions"
          },
          "days": {
            "items": {
              "$ref": "#/components/schemas/Days"
            },
            "type": "array",
            "title": "Days"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time"
          }
        },
        "type": "object",
        "required": [
          "name",
          "action",
          "days",
          "start_time",
          "end_time"
        ],
        "title": "NBTimePolicy"
      },
      "NBTimePolicyCreateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "action": {
            "$ref": "#/components/schemas/TimePolicyActions"
          },
          "days": {
            "items": {
              "$ref": "#/components/schemas/Days"
            },
            "type": "array",
            "title": "Days"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time"
          }
        },
        "type": "object",
        "required": [
          "name",
          "action",
          "days",
          "start_time",
          "end_time"
        ],
        "title": "NBTimePolicyCreateRequest"
      },
      "NBUpdateCustomerPortRequest": {
        "properties": {
          "labels": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          },
          "max_bandwidth": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Bandwidth"
          }
        },
        "type": "object",
        "title": "NBUpdateCustomerPortRequest"
      },
      "NBUpdateDIAFirewallRuleRequest": {
        "properties": {
          "force_all_gw": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Force All Gw"
          },
          "gate_vi_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gate Vi Names"
          },
          "add_gate_vi_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add Gate Vi Names"
          },
          "remove_gate_vi_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Gate Vi Names"
          }
        },
        "type": "object",
        "title": "NBUpdateDIAFirewallRuleRequest"
      },
      "NBUpdateDataQuotaRequest": {
        "properties": {
          "fw_rules": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fw Rules"
          },
          "nat_rules": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nat Rules"
          },
          "bgp_neighbors": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bgp Neighbors"
          }
        },
        "type": "object",
        "title": "NBUpdateDataQuotaRequest"
      },
      "NBUpdateDescriptionRequest": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "description"
        ],
        "title": "NBUpdateDescriptionRequest"
      },
      "NBUpdateEnableRequest": {
        "properties": {
          "enable": {
            "type": "boolean",
            "title": "Enable"
          }
        },
        "type": "object",
        "required": [
          "enable"
        ],
        "title": "NBUpdateEnableRequest"
      },
      "NBUpdateFirewallRuleFiltersRequest": {
        "properties": {
          "filters": {
            "items": {
              "$ref": "#/components/schemas/RuleFilter"
            },
            "type": "array",
            "title": "Filters"
          }
        },
        "type": "object",
        "required": [
          "filters"
        ],
        "title": "NBUpdateFirewallRuleFiltersRequest"
      },
      "NBUpdateFirewallRuleForwardingPolicyRequest": {
        "properties": {
          "forwarding_policy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NBForwardingPolicy"
              },
              {
                "type": "null"
              }
            ]
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories"
          },
          "add_categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add Categories"
          },
          "remove_categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Categories"
          },
          "allowed_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Domains"
          },
          "add_allowed_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add Allowed Domains"
          },
          "remove_allowed_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Allowed Domains"
          },
          "denied_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied Domains"
          },
          "add_denied_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add Denied Domains"
          },
          "remove_denied_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Denied Domains"
          },
          "policy_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Policy Name"
          }
        },
        "type": "object",
        "title": "NBUpdateFirewallRuleForwardingPolicyRequest"
      },
      "NBUpdateFirewallRuleNameRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "NBUpdateFirewallRuleNameRequest"
      },
      "NBUpdateFirewallRulePriorityRequest": {
        "properties": {
          "priority": {
            "type": "integer",
            "title": "Priority"
          }
        },
        "type": "object",
        "required": [
          "priority"
        ],
        "title": "NBUpdateFirewallRulePriorityRequest"
      },
      "NBUpdateFirewallRuleRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "filters": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RuleFilter"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "forwarding_policy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NBForwardingPolicy"
              },
              {
                "type": "null"
              }
            ]
          },
          "enable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories"
          },
          "allowed_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Domains"
          },
          "denied_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied Domains"
          },
          "policy_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Policy Name"
          },
          "add_time_policies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add Time Policies"
          },
          "remove_time_policies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Time Policies"
          },
          "add_gate_vi_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add Gate Vi Names"
          },
          "remove_gate_vi_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Gate Vi Names"
          }
        },
        "type": "object",
        "title": "NBUpdateFirewallRuleRequest"
      },
      "NBUpdateIpFloodDiaRequest": {
        "properties": {
          "option_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Option Name"
          },
          "enable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable"
          }
        },
        "type": "object",
        "title": "NBUpdateIpFloodDiaRequest"
      },
      "NBUpdateMitigationRequest": {
        "properties": {
          "enable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable"
          }
        },
        "type": "object",
        "title": "NBUpdateMitigationRequest"
      },
      "NBUpdatePBMRuleRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "filters": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RuleFilter"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count"
          },
          "unit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PBMMeteringUnits"
              },
              {
                "type": "null"
              }
            ]
          },
          "enable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable"
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "NBUpdatePBMRuleRequest"
      },
      "NBUpdatePBRRuleRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "filters": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RuleFilter"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "action": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PBRAction"
              },
              {
                "type": "null"
              }
            ]
          },
          "enable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable"
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "NBUpdatePBRRuleRequest"
      },
      "NBUpdateTenantContactInfoRequest": {
        "properties": {
          "contact_info": {
            "$ref": "#/components/schemas/TenantContactInfo",
            "default": {}
          }
        },
        "type": "object",
        "title": "NBUpdateTenantContactInfoRequest"
      },
      "NBUpdateTenantFullNameRequest": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          }
        },
        "type": "object",
        "title": "NBUpdateTenantFullNameRequest"
      },
      "NBUpdateTenantGroupRequest": {
        "properties": {
          "subnets": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Subnets",
            "default": []
          },
          "users": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Users",
            "default": []
          }
        },
        "type": "object",
        "title": "NBUpdateTenantGroupRequest"
      },
      "NBUpdateTenantServicesPackageRequest": {
        "properties": {
          "services_package_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Services Package Name"
          }
        },
        "type": "object",
        "title": "NBUpdateTenantServicesPackageRequest"
      },
      "NBUpdateUserBaseData": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "default": ""
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "default": ""
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "default": ""
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "default": ""
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "title": "NBUpdateUserBaseData"
      },
      "NBUpdateUserData": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "default": ""
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "default": ""
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "default": ""
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "default": ""
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": ""
          },
          "password": {
            "anyOf": [
              {
                "type": "string",
                "format": "password",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              },
              {
                "type": "null"
              }
            ]
          },
          "enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled"
          },
          "password_is_expired": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password Is Expired"
          },
          "is_remote_user": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Remote User"
          }
        },
        "type": "object",
        "title": "NBUpdateUserData"
      },
      "NBUpdateUserRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "data": {
            "$ref": "#/components/schemas/NBUpdateUserData"
          }
        },
        "type": "object",
        "required": [
          "username",
          "data"
        ],
        "title": "NBUpdateUserRequest"
      },
      "NBUpdateVirtualInterfaceAddressesRequest": {
        "properties": {
          "add_ip_addresses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Add Ip Addresses",
            "default": []
          },
          "delete_ip_addresses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Delete Ip Addresses",
            "default": []
          }
        },
        "type": "object",
        "title": "NBUpdateVirtualInterfaceAddressesRequest"
      },
      "NBUser": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_remote_user": {
            "type": "boolean",
            "title": "Is Remote User",
            "default": false
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "password_is_expired": {
            "type": "boolean",
            "title": "Password Is Expired"
          },
          "remaining_failed_attempts": {
            "type": "integer",
            "title": "Remaining Failed Attempts"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "enabled",
          "password_is_expired",
          "remaining_failed_attempts"
        ],
        "title": "NBUser"
      },
      "NBUserCreateRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "format": "password",
            "title": "Password",
            "writeOnly": true
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "default": ""
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "default": ""
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "default": ""
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": ""
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": true
          },
          "password_is_expired": {
            "type": "boolean",
            "title": "Password Is Expired",
            "default": false
          },
          "is_remote_user": {
            "type": "boolean",
            "title": "Is Remote User",
            "default": false
          },
          "partner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Id"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password",
          "email",
          "role"
        ],
        "title": "NBUserCreateRequest"
      },
      "NBVTEPVNIInterfaceResponse": {
        "properties": {
          "administrative_state": {
            "$ref": "#/components/schemas/InterfaceState",
            "default": "up"
          },
          "mtu": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mtu"
          },
          "max_bandwidth": {
            "type": "integer",
            "title": "Max Bandwidth",
            "default": 0
          },
          "virtual_interface_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Id"
          },
          "virtual_interface_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Name"
          },
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "labels": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/L2Labels"
              },
              {
                "type": "null"
              }
            ]
          },
          "customer_port_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Port Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "operational_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ]
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "vni_id": {
            "type": "integer",
            "title": "Vni Id"
          },
          "vtep_id": {
            "type": "integer",
            "title": "Vtep Id"
          },
          "evpn_type": {
            "$ref": "#/components/schemas/EVPNType"
          },
          "tunnels": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/NBVxLANTunnel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tunnels",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "vni_id",
          "vtep_id",
          "evpn_type"
        ],
        "title": "NBVTEPVNIInterfaceResponse"
      },
      "NBVirtualInterfaceCreateType": {
        "type": "string",
        "enum": [
          "bridged",
          "routed",
          "loopback"
        ],
        "title": "NBVirtualInterfaceCreateType"
      },
      "NBVirtualInterfaceGateResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "virtual_interface_bridge_domain_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Bridge Domain Name"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/NBVirtualInterfaceMembers"
            },
            "type": "array",
            "title": "Members",
            "default": []
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_snat_service": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Snat Service"
          },
          "is_nat_service": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Nat Service"
          },
          "is_ipsec_service": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Ipsec Service"
          },
          "is_lb_service": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Lb Service"
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "operational_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ]
          },
          "ip_addresses": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Addresses",
            "default": []
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "is_dia": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Dia"
          },
          "asn": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asn"
          },
          "configuration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GateConfiguration"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "NBVirtualInterfaceGateResponse"
      },
      "NBVirtualInterfaceIPSECCreateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 63,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "title": "Name"
          },
          "remote_ip": {
            "type": "string",
            "title": "Remote Ip"
          },
          "ip_addresses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ip Addresses",
            "default": []
          },
          "remote_networks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Remote Networks"
          },
          "local_networks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Local Networks"
          },
          "dh_groups": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Dh Groups",
            "default": [
              18
            ]
          },
          "encryption": {
            "$ref": "#/components/schemas/EncryptionType",
            "default": "aes256gcm"
          },
          "auth": {
            "$ref": "#/components/schemas/AuthType",
            "default": "prfsha256"
          },
          "psk": {
            "type": "string",
            "title": "Psk"
          },
          "passive": {
            "type": "boolean",
            "title": "Passive",
            "default": false
          },
          "udp_encap": {
            "type": "boolean",
            "title": "Udp Encap",
            "default": false
          },
          "nat_traversal": {
            "type": "boolean",
            "title": "Nat Traversal",
            "default": true
          },
          "local_id_type": {
            "$ref": "#/components/schemas/IPSecIDType",
            "default": "ipv4"
          },
          "local_id_data": {
            "type": "string",
            "title": "Local Id Data",
            "default": ""
          },
          "remote_id_type": {
            "$ref": "#/components/schemas/IPSecIDType",
            "default": "ipv4"
          },
          "remote_id_data": {
            "type": "string",
            "title": "Remote Id Data",
            "default": ""
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "administrative_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ],
            "default": "up"
          },
          "virtual_interface_gate_name": {
            "type": "string",
            "title": "Virtual Interface Gate Name"
          },
          "network_segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Network Segments",
            "default": []
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "name",
          "remote_ip",
          "remote_networks",
          "local_networks",
          "psk",
          "virtual_interface_gate_name"
        ],
        "title": "NBVirtualInterfaceIPSECCreateRequest"
      },
      "NBVirtualInterfaceIPSECResponse": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uuid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "remote_ip": {
            "type": "string",
            "title": "Remote Ip"
          },
          "remote_networks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Remote Networks"
          },
          "local_networks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Local Networks"
          },
          "dh_groups": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Dh Groups"
          },
          "encryption": {
            "$ref": "#/components/schemas/EncryptionType"
          },
          "auth": {
            "$ref": "#/components/schemas/AuthType"
          },
          "psk": {
            "type": "string",
            "title": "Psk"
          },
          "passive": {
            "type": "boolean",
            "title": "Passive"
          },
          "udp_encap": {
            "type": "boolean",
            "title": "Udp Encap"
          },
          "nat_traversal": {
            "type": "boolean",
            "title": "Nat Traversal"
          },
          "local_id_type": {
            "$ref": "#/components/schemas/IPSecIDType"
          },
          "local_id_data": {
            "type": "string",
            "title": "Local Id Data"
          },
          "remote_id_type": {
            "$ref": "#/components/schemas/IPSecIDType"
          },
          "remote_id_data": {
            "type": "string",
            "title": "Remote Id Data"
          },
          "dead_peer_detection": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dead Peer Detection",
            "default": true
          },
          "dead_peer_detection_timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dead Peer Detection Timeout",
            "default": 30
          },
          "ike_version": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ike Version",
            "default": 2
          },
          "operational_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ],
            "default": "up"
          },
          "virtual_interface_gate_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Gate Name"
          },
          "network_segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Network Segments",
            "default": []
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          },
          "ip_addresses": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Addresses",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name",
          "tenant_name",
          "remote_ip",
          "remote_networks",
          "local_networks",
          "dh_groups",
          "encryption",
          "auth",
          "psk",
          "passive",
          "udp_encap",
          "nat_traversal",
          "local_id_type",
          "local_id_data",
          "remote_id_type",
          "remote_id_data"
        ],
        "title": "NBVirtualInterfaceIPSECResponse"
      },
      "NBVirtualInterfaceIPSECUpdateRequest": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "add_network_segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Add Network Segments",
            "default": []
          },
          "delete_network_segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Delete Network Segments",
            "default": []
          },
          "add_ip_addresses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Add Ip Addresses",
            "default": []
          },
          "delete_ip_addresses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Delete Ip Addresses",
            "default": []
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          }
        },
        "type": "object",
        "title": "NBVirtualInterfaceIPSECUpdateRequest"
      },
      "NBVirtualInterfaceMembers": {
        "properties": {
          "interface_type": {
            "type": "string",
            "title": "Interface Type"
          },
          "interfaces": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/NBPortVLANInterfaceResponse"
                },
                "type": "array"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/NBVTEPVNIInterfaceResponse"
                },
                "type": "array"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/NBQINQPortVLANInterfaceResponse"
                },
                "type": "array"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/NBPortInterfaceResponse"
                },
                "type": "array"
              }
            ],
            "title": "Interfaces",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "interface_type"
        ],
        "title": "NBVirtualInterfaceMembers"
      },
      "NBVirtualInterfaceTenantBridgeDomainUpdateRequest": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          }
        },
        "type": "object",
        "title": "NBVirtualInterfaceTenantBridgeDomainUpdateRequest"
      },
      "NBVirtualInterfaceTenantCreateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 63,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "title": "Name"
          },
          "virtual_interface_type": {
            "$ref": "#/components/schemas/NBVirtualInterfaceCreateType",
            "default": "routed"
          },
          "ipv4_addresses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ipv4 Addresses",
            "default": []
          },
          "ipv6_addresses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ipv6 Addresses",
            "default": []
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "mtu": {
            "type": "integer",
            "title": "Mtu",
            "default": 9220
          },
          "administrative_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ],
            "default": "up"
          },
          "network_segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Network Segments",
            "default": []
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "NBVirtualInterfaceTenantCreateRequest"
      },
      "NBVirtualInterfaceTenantResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "ip_addresses": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Addresses",
            "default": []
          },
          "mtu": {
            "type": "integer",
            "title": "Mtu",
            "default": 9220
          },
          "administrative_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ]
          },
          "operational_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterfaceState"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/NBVirtualInterfaceMembers"
            },
            "type": "array",
            "title": "Members",
            "default": []
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "virtual_interface_type": {
            "$ref": "#/components/schemas/NBVirtualInterfaceType"
          },
          "up_members": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Up Members"
          },
          "total_members": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Members"
          },
          "network_segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Network Segments",
            "default": []
          },
          "labels": {
            "additionalProperties": true,
            "type": "object",
            "title": "Labels",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "virtual_interface_type"
        ],
        "title": "NBVirtualInterfaceTenantResponse"
      },
      "NBVirtualInterfaceType": {
        "type": "string",
        "enum": [
          "bridged",
          "routed",
          "NAT",
          "loopback",
          "gateway",
          "load_balance"
        ],
        "title": "NBVirtualInterfaceType"
      },
      "NBVxLANTunnel": {
        "properties": {
          "remote_ip": {
            "type": "string",
            "title": "Remote Ip"
          }
        },
        "type": "object",
        "required": [
          "remote_ip"
        ],
        "title": "NBVxLANTunnel"
      },
      "NBWGConnectionType": {
        "type": "string",
        "enum": [
          "wired",
          "wireless",
          "ppp"
        ],
        "title": "NBWGConnectionType"
      },
      "NBWGTrustStatus": {
        "type": "string",
        "enum": [
          "trusted",
          "untrusted"
        ],
        "title": "NBWGTrustStatus"
      },
      "NBWGTunnel": {
        "properties": {
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name"
          },
          "tunnel_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tunnel Id"
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "system_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Location"
          },
          "public_key": {
            "type": "string",
            "title": "Public Key"
          },
          "tunnel_ip": {
            "type": "string",
            "title": "Tunnel Ip"
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "public_key",
          "tunnel_ip"
        ],
        "title": "NBWGTunnel"
      },
      "NBWGTunnelConfResponse": {
        "properties": {
          "tunnel_id": {
            "type": "string",
            "title": "Tunnel Id"
          },
          "tunnel_ip": {
            "type": "string",
            "title": "Tunnel Ip"
          },
          "tunnel_private_key": {
            "type": "string",
            "title": "Tunnel Private Key"
          },
          "tunnel_DNS": {
            "type": "string",
            "title": "Tunnel Dns"
          },
          "public_key": {
            "type": "string",
            "title": "Public Key"
          },
          "psk": {
            "type": "string",
            "title": "Psk"
          },
          "allowed_ips": {
            "type": "string",
            "title": "Allowed Ips"
          },
          "untrusted_allowed_ips": {
            "type": "string",
            "title": "Untrusted Allowed Ips"
          },
          "remote_ip": {
            "type": "string",
            "title": "Remote Ip"
          },
          "remote_port": {
            "type": "string",
            "title": "Remote Port"
          },
          "system_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Location"
          }
        },
        "type": "object",
        "required": [
          "tunnel_id",
          "tunnel_ip",
          "tunnel_private_key",
          "tunnel_DNS",
          "public_key",
          "psk",
          "allowed_ips",
          "untrusted_allowed_ips",
          "remote_ip",
          "remote_port"
        ],
        "title": "NBWGTunnelConfResponse"
      },
      "NBWGTunnelCreateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "public_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public Key"
          },
          "private_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Private Key"
          },
          "psk": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Psk"
          },
          "tunnel_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tunnel Ip"
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "NBWGTunnelCreateRequest"
      },
      "NBWGTunnelDeviceDataRequest": {
        "properties": {
          "timestamp": {
            "type": "integer",
            "title": "Timestamp"
          },
          "connection_type": {
            "$ref": "#/components/schemas/NBWGConnectionType"
          },
          "ip_address": {
            "type": "string",
            "title": "Ip Address"
          },
          "router_ip": {
            "type": "string",
            "title": "Router Ip"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "ssid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssid"
          },
          "port_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Port Name"
          },
          "tunnel_status": {
            "$ref": "#/components/schemas/NBWGTunnelStatus"
          },
          "ssid_trust_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NBWGTrustStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "ssid_security": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssid Security"
          },
          "bssid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bssid"
          },
          "channel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Channel"
          },
          "rssi": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rssi"
          },
          "noise": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Noise"
          },
          "tx_rate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tx Rate"
          },
          "phy_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phy Mode"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "connection_type",
          "ip_address",
          "router_ip",
          "tunnel_status"
        ],
        "title": "NBWGTunnelDeviceDataRequest"
      },
      "NBWGTunnelDeviceDataResponse": {
        "properties": {},
        "type": "object",
        "title": "NBWGTunnelDeviceDataResponse"
      },
      "NBWGTunnelStatus": {
        "type": "string",
        "enum": [
          "connected",
          "disconnected"
        ],
        "title": "NBWGTunnelStatus"
      },
      "NIROBranding": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "NIROBranding"
      },
      "NbMacTenantEntry": {
        "properties": {
          "mac": {
            "type": "string",
            "title": "Mac"
          },
          "virtual_interface_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Name"
          },
          "is_static": {
            "type": "boolean",
            "title": "Is Static"
          },
          "is_aged": {
            "type": "boolean",
            "title": "Is Aged"
          },
          "age_minutes": {
            "type": "integer",
            "title": "Age Minutes"
          },
          "alias_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias Name"
          },
          "is_dia": {
            "type": "boolean",
            "title": "Is Dia"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "port_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Port Name"
          }
        },
        "type": "object",
        "required": [
          "mac",
          "is_static",
          "is_aged",
          "age_minutes",
          "is_dia"
        ],
        "title": "NbMacTenantEntry"
      },
      "NbServiceType": {
        "type": "string",
        "enum": [
          "ddos",
          "fqdn",
          "sdr",
          "firewall",
          "dpi",
          "dns",
          "ids",
          "load_balancing",
          "remote_users",
          "segments",
          "nat",
          "dia_fw",
          "cloud_router",
          "dia_ddos"
        ],
        "title": "NbServiceType"
      },
      "NetworkObject": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "subnets": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Subnets"
          },
          "ports": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Ports"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "subnets",
          "ports"
        ],
        "title": "NetworkObject"
      },
      "NetworkSegmentPrefix": {
        "properties": {
          "subnet": {
            "type": "string",
            "title": "Subnet"
          },
          "interface_name": {
            "type": "string",
            "title": "Interface Name"
          }
        },
        "type": "object",
        "required": [
          "subnet",
          "interface_name"
        ],
        "title": "NetworkSegmentPrefix"
      },
      "NextHop": {
        "properties": {
          "ip": {
            "type": "string",
            "title": "Ip"
          },
          "afi": {
            "type": "string",
            "title": "Afi"
          },
          "used": {
            "type": "boolean",
            "title": "Used"
          }
        },
        "type": "object",
        "required": [
          "ip",
          "afi",
          "used"
        ],
        "title": "NextHop"
      },
      "Node": {
        "properties": {
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "role": {
            "$ref": "#/components/schemas/NodeRole",
            "default": "active"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NodeType"
              },
              {
                "type": "null"
              }
            ]
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "build_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Build Number"
          },
          "build_sha": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Build Sha"
          },
          "iso_epoch": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iso Epoch"
          },
          "vendor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vendor"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "serial": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial"
          },
          "virtual": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual"
          },
          "cpu_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Type"
          },
          "cpu_isolated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Isolated"
          },
          "cpu_socket_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Socket Count"
          },
          "cpu_core_per_socket": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Core Per Socket"
          },
          "cpu_cores_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Cores Total"
          },
          "mem_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mem Total"
          },
          "disk_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disk Total"
          },
          "health_score": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Health Score"
          },
          "last_role_change": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Role Change"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "status": {
            "$ref": "#/components/schemas/NodeStatus",
            "default": "registered"
          },
          "availability": {
            "$ref": "#/components/schemas/NodeAvailability",
            "default": "up"
          },
          "ha_status": {
            "$ref": "#/components/schemas/HAStatus",
            "default": "auto"
          }
        },
        "type": "object",
        "required": [
          "id",
          "address"
        ],
        "title": "Node"
      },
      "NodeAvailability": {
        "type": "string",
        "enum": [
          "up",
          "down",
          "partial"
        ],
        "title": "NodeAvailability"
      },
      "NodeRole": {
        "type": "string",
        "enum": [
          "active",
          "standby"
        ],
        "title": "NodeRole"
      },
      "NodeStatus": {
        "type": "string",
        "enum": [
          "registered",
          "ready",
          "syncing",
          "desynced",
          "invalid_cert",
          "unavailable",
          "new",
          "discovered"
        ],
        "title": "NodeStatus"
      },
      "NodeType": {
        "type": "string",
        "enum": [
          "nsos-v",
          "nsos-500",
          "nsos-1000",
          "nsos-6000",
          "nsos-6004"
        ],
        "title": "NodeType"
      },
      "PBMMeteringUnits": {
        "type": "string",
        "enum": [
          "unspecified",
          "kps",
          "pps"
        ],
        "title": "PBMMeteringUnits"
      },
      "PBRAction": {
        "type": "string",
        "enum": [
          "ROUTE",
          "NO_ROUTE"
        ],
        "title": "PBRAction"
      },
      "PCAPParams": {
        "properties": {
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "gate_vi_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gate Vi Name"
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "vrf_id": {
            "type": "integer",
            "title": "Vrf Id"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 1
          },
          "filters": {
            "additionalProperties": {
              "$ref": "#/components/schemas/PcapFilter"
            },
            "type": "object",
            "title": "Filters",
            "default": {}
          },
          "max_packets": {
            "type": "integer",
            "title": "Max Packets",
            "default": 200
          },
          "timeout_sec": {
            "type": "integer",
            "title": "Timeout Sec",
            "default": 10
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "default": 256
          }
        },
        "type": "object",
        "required": [
          "vrf_id"
        ],
        "title": "PCAPParams"
      },
      "PcapDirection": {
        "type": "integer",
        "enum": [
          0,
          1,
          2
        ],
        "title": "PcapDirection"
      },
      "PcapFilter": {
        "properties": {
          "src_network": {
            "anyOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              },
              {
                "type": "null"
              }
            ],
            "title": "Src Network"
          },
          "dst_network": {
            "anyOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dst Network"
          },
          "src_l4_port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Src L4 Port"
          },
          "dst_l4_port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dst L4 Port"
          },
          "protocol": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Protocol"
          },
          "ingress_vi_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ingress Vi Id"
          },
          "tcp_control": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tcp Control"
          },
          "is_fragmented": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Fragmented"
          },
          "tos": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tos"
          },
          "traffic_class": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Traffic Class"
          },
          "ttl": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl"
          },
          "hop_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hop Limit"
          },
          "ip_version": {
            "type": "boolean",
            "title": "Ip Version",
            "default": false
          },
          "ingress_l2_interface_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ingress L2 Interface Id"
          },
          "pcap_direction": {
            "$ref": "#/components/schemas/PcapDirection",
            "default": 0
          }
        },
        "type": "object",
        "title": "PcapFilter"
      },
      "PfxListItem": {
        "properties": {
          "ip": {
            "type": "string",
            "title": "Ip"
          },
          "le": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Le"
          },
          "ge": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ge"
          },
          "seq": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seq"
          },
          "match": {
            "type": "boolean",
            "title": "Match",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "ip"
        ],
        "title": "PfxListItem"
      },
      "PingRequestParameters": {
        "properties": {
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "gate_vi_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gate Vi Name"
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "address": {
            "type": "string",
            "title": "Address"
          }
        },
        "type": "object",
        "required": [
          "address"
        ],
        "title": "PingRequestParameters"
      },
      "Policy": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          },
          "forwarding_policy": {
            "$ref": "#/components/schemas/NBForwardingPolicy"
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Categories"
          },
          "allowed_domains": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Allowed Domains"
          },
          "denied_domains": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Denied Domains"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "tenant": {
            "$ref": "#/components/schemas/Tenant"
          }
        },
        "type": "object",
        "required": [
          "name",
          "tenant_name",
          "forwarding_policy",
          "categories",
          "allowed_domains",
          "denied_domains",
          "id",
          "tenant"
        ],
        "title": "Policy"
      },
      "PublicIPType": {
        "type": "string",
        "enum": [
          "global",
          "location",
          "system"
        ],
        "title": "PublicIPType"
      },
      "RouteDetail": {
        "properties": {
          "valid": {
            "type": "boolean",
            "title": "Valid"
          },
          "bestpath": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bestpath"
          },
          "selectionReason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selectionreason"
          },
          "pathFrom": {
            "type": "string",
            "title": "Pathfrom"
          },
          "prefix": {
            "type": "string",
            "title": "Prefix"
          },
          "prefixLen": {
            "type": "integer",
            "title": "Prefixlen"
          },
          "network": {
            "type": "string",
            "title": "Network"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "weight": {
            "type": "integer",
            "title": "Weight"
          },
          "peerId": {
            "type": "string",
            "title": "Peerid"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "origin": {
            "type": "string",
            "title": "Origin"
          },
          "next_hops": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/NextHop"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Hops"
          }
        },
        "type": "object",
        "required": [
          "valid",
          "selectionReason",
          "pathFrom",
          "prefix",
          "prefixLen",
          "network",
          "version",
          "weight",
          "peerId",
          "path",
          "origin"
        ],
        "title": "RouteDetail"
      },
      "RouteLookUpRequestParameters": {
        "properties": {
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "gate_vi_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gate Vi Name"
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          }
        },
        "type": "object",
        "title": "RouteLookUpRequestParameters"
      },
      "RouteMapAction": {
        "type": "string",
        "enum": [
          "permit",
          "deny"
        ],
        "title": "RouteMapAction"
      },
      "RouteType": {
        "type": "string",
        "enum": [
          "static",
          "bgp",
          "connected",
          "type5"
        ],
        "title": "RouteType"
      },
      "RuleFilter": {
        "properties": {
          "filter_type": {
            "$ref": "#/components/schemas/FilterType"
          },
          "values": {
            "title": "Values"
          }
        },
        "type": "object",
        "required": [
          "filter_type",
          "values"
        ],
        "title": "RuleFilter"
      },
      "SSOTokenExchangeRequest": {
        "properties": {
          "state": {
            "type": "string",
            "title": "State"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          }
        },
        "type": "object",
        "required": [
          "state",
          "code",
          "tenant_name"
        ],
        "title": "SSOTokenExchangeRequest"
      },
      "SampleRate": {
        "type": "string",
        "enum": [
          "auto",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "1h"
        ],
        "title": "SampleRate",
        "description": "Enum defining the sample rate in any Statistics API request"
      },
      "Service": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NbServiceType"
          },
          "enable": {
            "type": "boolean",
            "title": "Enable"
          },
          "data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "type",
          "enable",
          "data"
        ],
        "title": "Service"
      },
      "ServicePrice": {
        "properties": {
          "value": {
            "type": "number",
            "title": "Value"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          }
        },
        "type": "object",
        "required": [
          "value",
          "currency"
        ],
        "title": "ServicePrice"
      },
      "ServicesPackageLabels": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "presentation_name": {
            "type": "string",
            "title": "Presentation Name"
          },
          "order": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order"
          }
        },
        "type": "object",
        "required": [
          "presentation_name"
        ],
        "title": "ServicesPackageLabels"
      },
      "SingleSignOnProviders": {
        "properties": {
          "providers": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Providers"
          }
        },
        "type": "object",
        "required": [
          "providers"
        ],
        "title": "SingleSignOnProviders"
      },
      "Site": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "connection_type": {
            "$ref": "#/components/schemas/SiteConnectionType"
          },
          "operator": {
            "type": "string",
            "title": "Operator"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "cloud_region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cloud Region"
          },
          "network_status": {
            "$ref": "#/components/schemas/SiteNetworkStatus"
          },
          "handover_bw": {
            "items": {
              "$ref": "#/components/schemas/SiteBandwidth"
            },
            "type": "array",
            "title": "Handover Bw"
          },
          "naas_location": {
            "type": "string",
            "title": "Naas Location"
          },
          "naas_systems": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Naas Systems"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Labels",
            "default": {}
          },
          "market_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Market Name"
          },
          "market_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Market Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "connection_type",
          "operator",
          "address",
          "network_status",
          "handover_bw",
          "naas_location",
          "naas_systems",
          "id"
        ],
        "title": "Site"
      },
      "SiteBandwidth": {
        "properties": {
          "bw": {
            "type": "number",
            "title": "Bw"
          },
          "hw": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hw"
          }
        },
        "type": "object",
        "required": [
          "bw"
        ],
        "title": "SiteBandwidth"
      },
      "SiteConnectionType": {
        "type": "string",
        "enum": [
          "DC",
          "Splice Point",
          "FTTB",
          "Cloud",
          "Market"
        ],
        "title": "SiteConnectionType"
      },
      "SiteCreateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "connection_type": {
            "$ref": "#/components/schemas/SiteConnectionType"
          },
          "operator": {
            "type": "string",
            "title": "Operator"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "cloud_region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cloud Region"
          },
          "network_status": {
            "$ref": "#/components/schemas/SiteNetworkStatus"
          },
          "handover_bw": {
            "items": {
              "$ref": "#/components/schemas/SiteBandwidth"
            },
            "type": "array",
            "title": "Handover Bw"
          },
          "naas_location": {
            "type": "string",
            "title": "Naas Location"
          },
          "naas_systems": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Naas Systems"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Labels",
            "default": {}
          },
          "market_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Market Name"
          },
          "market_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Market Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "connection_type",
          "operator",
          "address",
          "network_status",
          "handover_bw",
          "naas_location",
          "naas_systems"
        ],
        "title": "SiteCreateRequest"
      },
      "SiteNetworkStatus": {
        "type": "string",
        "enum": [
          "off",
          "partner",
          "net"
        ],
        "title": "SiteNetworkStatus"
      },
      "SiteUpdateData": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "connection_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SiteConnectionType"
              },
              {
                "type": "null"
              }
            ]
          },
          "operator": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operator"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "cloud_region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cloud Region"
          },
          "network_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SiteNetworkStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "handover_bw": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SiteBandwidth"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Handover Bw"
          },
          "naas_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Naas Location"
          },
          "naas_systems": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Naas Systems"
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          },
          "market_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Market Name"
          },
          "market_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Market Id"
          }
        },
        "type": "object",
        "title": "SiteUpdateData"
      },
      "StatisticsDdosAttackRequest": {
        "properties": {
          "since": {
            "type": "string",
            "format": "date-time",
            "title": "Since"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "title": "Until"
          },
          "sample_rate": {
            "$ref": "#/components/schemas/SampleRate",
            "default": "auto"
          },
          "column": {
            "items": {
              "$ref": "#/components/schemas/StatisticsDdosMetricsColumns"
            },
            "type": "array",
            "title": "Column"
          },
          "filters": {
            "$ref": "#/components/schemas/StatisticsDdosAttackTrafficFilters"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatisticsFlags"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "since",
          "until",
          "column",
          "filters"
        ],
        "title": "StatisticsDdosAttackRequest"
      },
      "StatisticsDdosAttackTrafficFilters": {
        "properties": {
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "rule_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule Name"
          },
          "rule_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule Id"
          },
          "gate_vi": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gate Vi"
          },
          "target_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Address"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "StatisticsDdosAttackTrafficFilters"
      },
      "StatisticsDdosMetricsColumns": {
        "type": "string",
        "enum": [
          "rx_bytes",
          "tx_bytes",
          "rx_bps",
          "rx_bps_dropped_by_meter",
          "outgoing_bps",
          "tx_bps",
          "tx_bps_dropped_by_meter",
          "incoming_bps",
          "rx_packets",
          "tx_packets",
          "rx_pps",
          "rx_pps_dropped_by_meter",
          "outgoing_pps",
          "tx_pps",
          "tx_pps_dropped_by_meter",
          "incoming_pps"
        ],
        "title": "StatisticsDdosMetricsColumns"
      },
      "StatisticsFirewallFilters": {
        "properties": {
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "rule_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule Name"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "StatisticsFirewallFilters"
      },
      "StatisticsFirewallMetricsColumns": {
        "type": "string",
        "enum": [
          "cps",
          "bps",
          "pps",
          "bytes",
          "packets",
          "connections",
          "concurrent_connections"
        ],
        "title": "StatisticsFirewallMetricsColumns"
      },
      "StatisticsFirewallRequest": {
        "properties": {
          "since": {
            "type": "string",
            "format": "date-time",
            "title": "Since"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "title": "Until"
          },
          "sample_rate": {
            "$ref": "#/components/schemas/SampleRate",
            "default": "auto"
          },
          "column": {
            "items": {
              "$ref": "#/components/schemas/StatisticsFirewallMetricsColumns"
            },
            "type": "array",
            "title": "Column"
          },
          "filters": {
            "$ref": "#/components/schemas/StatisticsFirewallFilters"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatisticsFirewallTraficFlags"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "since",
          "until",
          "column",
          "filters"
        ],
        "title": "StatisticsFirewallRequest"
      },
      "StatisticsFirewallTraficFlags": {
        "properties": {
          "group_by_rule_name": {
            "type": "boolean",
            "title": "Group By Rule Name",
            "default": true
          },
          "firewall_type": {
            "$ref": "#/components/schemas/FirewallType",
            "default": "firewall"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "StatisticsFirewallTraficFlags"
      },
      "StatisticsFlags": {
        "properties": {},
        "additionalProperties": false,
        "type": "object",
        "title": "StatisticsFlags"
      },
      "StatisticsFloodMetricsColumns": {
        "type": "string",
        "enum": [
          "rx_bps",
          "rx_bps_dropped_by_meter",
          "outgoing_bps",
          "tx_bps",
          "tx_bps_dropped_by_meter",
          "incoming_bps",
          "rx_pps",
          "rx_pps_dropped_by_meter",
          "outgoing_pps",
          "tx_pps",
          "tx_pps_dropped_by_meter",
          "incoming_pps",
          "rx_bytes",
          "tx_bytes",
          "rx_packets",
          "tx_packets"
        ],
        "title": "StatisticsFloodMetricsColumns"
      },
      "StatisticsFloodRequest": {
        "properties": {
          "since": {
            "type": "string",
            "format": "date-time",
            "title": "Since"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "title": "Until"
          },
          "sample_rate": {
            "$ref": "#/components/schemas/SampleRate",
            "default": "auto"
          },
          "column": {
            "items": {
              "$ref": "#/components/schemas/StatisticsFloodMetricsColumns"
            },
            "type": "array",
            "title": "Column"
          },
          "filters": {
            "$ref": "#/components/schemas/StatisticsFloodTrafficFilters"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatisticsFloodTraficFlags"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "since",
          "until",
          "column",
          "filters"
        ],
        "title": "StatisticsFloodRequest"
      },
      "StatisticsFloodTrafficFilters": {
        "properties": {
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "rule_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule Name"
          },
          "rule_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule Id"
          },
          "gate_vi": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gate Vi"
          },
          "target_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Address"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "StatisticsFloodTrafficFilters"
      },
      "StatisticsFloodTraficFlags": {
        "properties": {
          "group_by_rule_name": {
            "type": "boolean",
            "title": "Group By Rule Name",
            "default": true
          },
          "group_by_rule_id": {
            "type": "boolean",
            "title": "Group By Rule Id",
            "default": false
          },
          "group_by_dia_name": {
            "type": "boolean",
            "title": "Group By Dia Name",
            "default": false
          },
          "group_by_target_address": {
            "type": "boolean",
            "title": "Group By Target Address",
            "default": false
          },
          "group_by_selected_option": {
            "type": "boolean",
            "title": "Group By Selected Option",
            "default": true
          },
          "flood_type": {
            "$ref": "#/components/schemas/FloodType",
            "default": "all"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "StatisticsFloodTraficFlags"
      },
      "StatisticsL2Filters": {
        "properties": {
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "alias_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias Name"
          },
          "l2_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "L2 Name"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "node_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Name"
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "StatisticsL2Filters"
      },
      "StatisticsL2MetricsColumns": {
        "type": "string",
        "enum": [
          "rx_bytes",
          "tx_bytes",
          "rx_bits",
          "tx_bits",
          "rx_packets",
          "tx_packets",
          "rx_bytes_dropped_by_meter",
          "tx_bytes_dropped_by_meter",
          "rx_packets_dropped_by_meter",
          "tx_packets_dropped_by_meter",
          "rx_bps",
          "tx_bps",
          "rx_pps",
          "tx_pps",
          "rx_bps_dropped_by_meter",
          "tx_bps_dropped_by_meter",
          "rx_pps_dropped_by_meter",
          "tx_pps_dropped_by_meter",
          "incoming_bps",
          "outgoing_bps",
          "incoming_pps",
          "outgoing_pps"
        ],
        "title": "StatisticsL2MetricsColumns"
      },
      "StatisticsL2Request": {
        "properties": {
          "since": {
            "type": "string",
            "format": "date-time",
            "title": "Since"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "title": "Until"
          },
          "sample_rate": {
            "$ref": "#/components/schemas/SampleRate",
            "default": "auto"
          },
          "column": {
            "items": {
              "$ref": "#/components/schemas/StatisticsL2MetricsColumns"
            },
            "type": "array",
            "title": "Column"
          },
          "filters": {
            "$ref": "#/components/schemas/StatisticsL2Filters"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatisticsFlags"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "since",
          "until",
          "column",
          "filters"
        ],
        "title": "StatisticsL2Request"
      },
      "StatisticsMetricsColumns": {
        "type": "string",
        "enum": [
          "rx_bytes",
          "tx_bytes",
          "rx_bits",
          "tx_bits",
          "rx_packets",
          "tx_packets",
          "rx_bytes_dropped_by_meter",
          "tx_bytes_dropped_by_meter",
          "rx_packets_dropped_by_meter",
          "tx_packets_dropped_by_meter",
          "rx_bps",
          "tx_bps",
          "rx_pps",
          "tx_pps",
          "rx_bps_dropped_by_meter",
          "tx_bps_dropped_by_meter",
          "rx_pps_dropped_by_meter",
          "tx_pps_dropped_by_meter",
          "incoming_bps",
          "outgoing_bps",
          "incoming_pps",
          "outgoing_pps"
        ],
        "title": "StatisticsMetricsColumns"
      },
      "StatisticsNatFilters": {
        "properties": {
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "rule_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule Name"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "StatisticsNatFilters"
      },
      "StatisticsNatMetricsColumns": {
        "type": "string",
        "enum": [
          "rx_bps",
          "rx_pps",
          "rx_bytes",
          "rx_packets",
          "tx_bps",
          "tx_pps",
          "tx_bytes",
          "tx_packets"
        ],
        "title": "StatisticsNatMetricsColumns"
      },
      "StatisticsNatRequest": {
        "properties": {
          "since": {
            "type": "string",
            "format": "date-time",
            "title": "Since"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "title": "Until"
          },
          "sample_rate": {
            "$ref": "#/components/schemas/SampleRate",
            "default": "auto"
          },
          "column": {
            "items": {
              "$ref": "#/components/schemas/StatisticsNatMetricsColumns"
            },
            "type": "array",
            "title": "Column"
          },
          "filters": {
            "$ref": "#/components/schemas/StatisticsNatFilters"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatisticsNatTraficFlags"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "since",
          "until",
          "column",
          "filters"
        ],
        "title": "StatisticsNatRequest"
      },
      "StatisticsNatTraficFlags": {
        "properties": {
          "group_by_rule_name": {
            "type": "boolean",
            "title": "Group By Rule Name",
            "default": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "StatisticsNatTraficFlags"
      },
      "StatisticsPbrFilters": {
        "properties": {
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "rule_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule Name"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "StatisticsPbrFilters"
      },
      "StatisticsPbrMetricsColumns": {
        "type": "string",
        "enum": [
          "cps",
          "bps",
          "pps",
          "bytes",
          "packets",
          "connections",
          "concurrent_connections"
        ],
        "title": "StatisticsPbrMetricsColumns"
      },
      "StatisticsPbrRequest": {
        "properties": {
          "since": {
            "type": "string",
            "format": "date-time",
            "title": "Since"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "title": "Until"
          },
          "sample_rate": {
            "$ref": "#/components/schemas/SampleRate",
            "default": "auto"
          },
          "column": {
            "items": {
              "$ref": "#/components/schemas/StatisticsPbrMetricsColumns"
            },
            "type": "array",
            "title": "Column"
          },
          "filters": {
            "$ref": "#/components/schemas/StatisticsPbrFilters"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatisticsPbrTraficFlags"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "since",
          "until",
          "column",
          "filters"
        ],
        "title": "StatisticsPbrRequest"
      },
      "StatisticsPbrTraficFlags": {
        "properties": {
          "group_by_rule_name": {
            "type": "boolean",
            "title": "Group By Rule Name",
            "default": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "StatisticsPbrTraficFlags"
      },
      "StatisticsRequest_StatisticsMetricsColumns_StatisticsViFilters_StatisticsFlags_": {
        "properties": {
          "since": {
            "type": "string",
            "format": "date-time",
            "title": "Since"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "title": "Until"
          },
          "sample_rate": {
            "$ref": "#/components/schemas/SampleRate",
            "default": "auto"
          },
          "column": {
            "items": {
              "$ref": "#/components/schemas/StatisticsMetricsColumns"
            },
            "type": "array",
            "title": "Column"
          },
          "filters": {
            "$ref": "#/components/schemas/StatisticsViFilters"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatisticsFlags"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "since",
          "until",
          "column",
          "filters"
        ],
        "title": "StatisticsRequest[StatisticsMetricsColumns, StatisticsViFilters, StatisticsFlags]"
      },
      "StatisticsResponse": {
        "properties": {
          "samples": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Samples",
            "default": []
          },
          "sample_rate": {
            "type": "string",
            "title": "Sample Rate"
          }
        },
        "type": "object",
        "required": [
          "sample_rate"
        ],
        "title": "StatisticsResponse"
      },
      "StatisticsViFilters": {
        "properties": {
          "vi_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vi Name"
          },
          "vrf_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrf Name"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          },
          "node_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Name"
          },
          "system_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "StatisticsViFilters"
      },
      "TagTypeDef": {
        "properties": {
          "Key": {
            "type": "string",
            "title": "Key"
          },
          "Value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "title": "TagTypeDef"
      },
      "Tenant": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "contact_info": {
            "$ref": "#/components/schemas/TenantContactInfo"
          },
          "quota_package_name": {
            "type": "string",
            "title": "Quota Package Name",
            "default": "Essentials"
          },
          "services_package_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Services Package Name"
          },
          "is_firewall_service": {
            "type": "boolean",
            "title": "Is Firewall Service",
            "default": true
          },
          "is_nat_service": {
            "type": "boolean",
            "title": "Is Nat Service",
            "default": true
          },
          "is_ids_service": {
            "type": "boolean",
            "title": "Is Ids Service",
            "default": true
          },
          "is_dns_service": {
            "type": "boolean",
            "title": "Is Dns Service",
            "default": true
          },
          "is_dia_fw_service": {
            "type": "boolean",
            "title": "Is Dia Fw Service",
            "default": true
          },
          "is_ddos_service": {
            "type": "boolean",
            "title": "Is Ddos Service",
            "default": false
          },
          "is_segments_service": {
            "type": "boolean",
            "title": "Is Segments Service",
            "default": true
          },
          "is_remote_users_service": {
            "type": "boolean",
            "title": "Is Remote Users Service",
            "default": true
          },
          "is_fqdn_service": {
            "type": "boolean",
            "title": "Is Fqdn Service",
            "default": true
          },
          "is_load_balancing_service": {
            "type": "boolean",
            "title": "Is Load Balancing Service",
            "default": false
          },
          "is_secure_web_gw_service": {
            "type": "boolean",
            "title": "Is Secure Web Gw Service",
            "default": false
          },
          "is_sdr_service": {
            "type": "boolean",
            "title": "Is Sdr Service",
            "default": false
          },
          "is_mesh_enabled": {
            "type": "boolean",
            "title": "Is Mesh Enabled",
            "default": false
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "vrfs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VRF"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vrfs"
          }
        },
        "type": "object",
        "required": [
          "name",
          "full_name",
          "contact_info",
          "id"
        ],
        "title": "Tenant"
      },
      "TenantArpEntry": {
        "properties": {
          "ip": {
            "type": "string",
            "title": "Ip"
          },
          "mac": {
            "type": "string",
            "title": "Mac"
          },
          "bridge_domain_id": {
            "type": "integer",
            "title": "Bridge Domain Id"
          },
          "virtual_interface_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Virtual Interface Name"
          },
          "is_static": {
            "type": "boolean",
            "title": "Is Static"
          },
          "age_sec": {
            "type": "integer",
            "title": "Age Sec"
          },
          "is_dia": {
            "type": "boolean",
            "title": "Is Dia",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "ip",
          "mac",
          "bridge_domain_id",
          "is_static",
          "age_sec"
        ],
        "title": "TenantArpEntry"
      },
      "TenantContactInfo": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "title": "TenantContactInfo"
      },
      "TenantNotificationsResponse": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TenantNotificationsType"
              },
              {
                "type": "string"
              }
            ],
            "title": "Type"
          },
          "title": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TenantNotificationsType"
              },
              {
                "type": "string"
              }
            ],
            "title": "Title"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "type",
          "title",
          "text"
        ],
        "title": "TenantNotificationsResponse"
      },
      "TenantNotificationsType": {
        "type": "string",
        "enum": [
          "port_and_cloud_link_dont_exist",
          "dia_fw_not_enabled",
          "dia_fw_not_configured",
          "private_asn_not_configured",
          "aws_cl_missing_bgp_configuration",
          "azure_cl_missing_connections",
          "azure_cl_missing_bgp_configuration",
          "gcp_cl_missing_connections",
          "gcp_cl_missing_bgp_configuration",
          "dia_ddos_not_enabled",
          "cloud_router_missing_connections",
          "customer_port_missing_connections",
          "public_ips_missing_dia",
          "approved_as_missing_dia_bgp"
        ],
        "title": "TenantNotificationsType"
      },
      "TenantRoute": {
        "properties": {
          "route_type": {
            "$ref": "#/components/schemas/RouteType"
          },
          "destination": {
            "type": "string",
            "title": "Destination"
          },
          "gateway": {
            "type": "string",
            "title": "Gateway"
          },
          "distance": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Distance"
          }
        },
        "type": "object",
        "required": [
          "route_type",
          "destination",
          "gateway",
          "distance"
        ],
        "title": "TenantRoute"
      },
      "Terms": {
        "properties": {
          "terms_content": {
            "items": {
              "$ref": "#/components/schemas/TermsContent"
            },
            "type": "array",
            "title": "Terms Content"
          }
        },
        "type": "object",
        "required": [
          "terms_content"
        ],
        "title": "Terms"
      },
      "TermsAndConditions": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "content": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Terms"
            },
            "type": "object",
            "title": "Content"
          },
          "related_services": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Related Services"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "enable": {
            "type": "boolean",
            "title": "Enable"
          },
          "expiration": {
            "type": "integer",
            "title": "Expiration"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "content",
          "related_services",
          "version",
          "enable",
          "expiration"
        ],
        "title": "TermsAndConditions"
      },
      "TermsContent": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "type",
          "content"
        ],
        "title": "TermsContent"
      },
      "TimePolicyActions": {
        "type": "string",
        "enum": [
          "activate",
          "disable"
        ],
        "title": "TimePolicyActions"
      },
      "TokenRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "format": "password",
            "title": "Password",
            "writeOnly": true
          },
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          },
          "new_password": {
            "anyOf": [
              {
                "type": "string",
                "format": "password",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password",
          "tenant_name"
        ],
        "title": "TokenRequest"
      },
      "TrustedAccessResponse": {
        "properties": {
          "end_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          }
        },
        "type": "object",
        "title": "TrustedAccessResponse"
      },
      "UpdateNetworkObjectRequest": {
        "properties": {
          "add_subnets": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Add Subnets",
            "default": []
          },
          "delete_subnets": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Delete Subnets",
            "default": []
          },
          "add_ports": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Add Ports",
            "default": []
          },
          "delete_ports": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Delete Ports",
            "default": []
          }
        },
        "type": "object",
        "title": "UpdateNetworkObjectRequest"
      },
      "UserData": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_remote_user": {
            "type": "boolean",
            "title": "Is Remote User",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "email"
        ],
        "title": "UserData"
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "admin",
          "viewer",
          "editor",
          "remote_user",
          "partner"
        ],
        "title": "UserRole"
      },
      "VRF": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "system_name": {
            "type": "string",
            "title": "System Name"
          },
          "vrf_type": {
            "$ref": "#/components/schemas/VRFType",
            "default": "system"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name"
          }
        },
        "type": "object",
        "required": [
          "name",
          "system_name",
          "id"
        ],
        "title": "VRF"
      },
      "VRFType": {
        "type": "string",
        "enum": [
          "system",
          "tenant",
          "internet"
        ],
        "title": "VRFType"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VirtualInterfaceType": {
        "type": "string",
        "enum": [
          "bridged",
          "routed",
          "loopback"
        ],
        "title": "VirtualInterfaceType"
      },
      "VisibleItemsList_NBServicesPackage_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NBServicesPackage"
            },
            "type": "array",
            "title": "Items"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          },
          "visible_count": {
            "type": "integer",
            "title": "Visible Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "VisibleItemsList[NBServicesPackage]"
      },
      "VpcCidrBlockAssociationTypeDef": {
        "properties": {
          "AssociationId": {
            "type": "string",
            "title": "Associationid"
          },
          "CidrBlock": {
            "type": "string",
            "title": "Cidrblock"
          },
          "CidrBlockState": {
            "$ref": "#/components/schemas/VpcCidrBlockStateTypeDef"
          }
        },
        "type": "object",
        "title": "VpcCidrBlockAssociationTypeDef"
      },
      "VpcCidrBlockStateTypeDef": {
        "properties": {
          "State": {
            "type": "string",
            "enum": [
              "associated",
              "associating",
              "disassociated",
              "disassociating",
              "failed",
              "failing"
            ],
            "title": "State"
          },
          "StatusMessage": {
            "type": "string",
            "title": "Statusmessage"
          }
        },
        "type": "object",
        "title": "VpcCidrBlockStateTypeDef"
      },
      "VpcEncryptionControlExclusionTypeDef": {
        "properties": {
          "State": {
            "type": "string",
            "enum": [
              "disabled",
              "disabling",
              "enabled",
              "enabling"
            ],
            "title": "State"
          },
          "StateMessage": {
            "type": "string",
            "title": "Statemessage"
          }
        },
        "type": "object",
        "title": "VpcEncryptionControlExclusionTypeDef"
      },
      "VpcEncryptionControlExclusionsTypeDef": {
        "properties": {
          "InternetGateway": {
            "$ref": "#/components/schemas/VpcEncryptionControlExclusionTypeDef"
          },
          "EgressOnlyInternetGateway": {
            "$ref": "#/components/schemas/VpcEncryptionControlExclusionTypeDef"
          },
          "NatGateway": {
            "$ref": "#/components/schemas/VpcEncryptionControlExclusionTypeDef"
          },
          "VirtualPrivateGateway": {
            "$ref": "#/components/schemas/VpcEncryptionControlExclusionTypeDef"
          },
          "VpcPeering": {
            "$ref": "#/components/schemas/VpcEncryptionControlExclusionTypeDef"
          }
        },
        "type": "object",
        "title": "VpcEncryptionControlExclusionsTypeDef"
      },
      "VpcEncryptionControlTypeDef": {
        "properties": {
          "VpcId": {
            "type": "string",
            "title": "Vpcid"
          },
          "VpcEncryptionControlId": {
            "type": "string",
            "title": "Vpcencryptioncontrolid"
          },
          "Mode": {
            "type": "string",
            "enum": [
              "enforce",
              "monitor"
            ],
            "title": "Mode"
          },
          "State": {
            "type": "string",
            "enum": [
              "available",
              "creating",
              "delete-failed",
              "deleted",
              "deleting",
              "enforce-failed",
              "enforce-in-progress",
              "monitor-failed",
              "monitor-in-progress"
            ],
            "title": "State"
          },
          "StateMessage": {
            "type": "string",
            "title": "Statemessage"
          },
          "ResourceExclusions": {
            "$ref": "#/components/schemas/VpcEncryptionControlExclusionsTypeDef"
          },
          "Tags": {
            "items": {
              "$ref": "#/components/schemas/TagTypeDef"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "title": "VpcEncryptionControlTypeDef"
      },
      "VpcIpv6CidrBlockAssociationTypeDef": {
        "properties": {
          "AssociationId": {
            "type": "string",
            "title": "Associationid"
          },
          "Ipv6CidrBlock": {
            "type": "string",
            "title": "Ipv6Cidrblock"
          },
          "Ipv6CidrBlockState": {
            "$ref": "#/components/schemas/VpcCidrBlockStateTypeDef"
          },
          "NetworkBorderGroup": {
            "type": "string",
            "title": "Networkbordergroup"
          },
          "Ipv6Pool": {
            "type": "string",
            "title": "Ipv6Pool"
          },
          "Ipv6AddressAttribute": {
            "type": "string",
            "enum": [
              "private",
              "public"
            ],
            "title": "Ipv6Addressattribute"
          },
          "IpSource": {
            "type": "string",
            "enum": [
              "amazon",
              "byoip",
              "none"
            ],
            "title": "Ipsource"
          }
        },
        "type": "object",
        "title": "VpcIpv6CidrBlockAssociationTypeDef"
      },
      "VpcTypeDef": {
        "properties": {
          "OwnerId": {
            "type": "string",
            "title": "Ownerid"
          },
          "InstanceTenancy": {
            "type": "string",
            "enum": [
              "dedicated",
              "default",
              "host"
            ],
            "title": "Instancetenancy"
          },
          "Ipv6CidrBlockAssociationSet": {
            "items": {
              "$ref": "#/components/schemas/VpcIpv6CidrBlockAssociationTypeDef"
            },
            "type": "array",
            "title": "Ipv6Cidrblockassociationset"
          },
          "CidrBlockAssociationSet": {
            "items": {
              "$ref": "#/components/schemas/VpcCidrBlockAssociationTypeDef"
            },
            "type": "array",
            "title": "Cidrblockassociationset"
          },
          "IsDefault": {
            "type": "boolean",
            "title": "Isdefault"
          },
          "EncryptionControl": {
            "$ref": "#/components/schemas/VpcEncryptionControlTypeDef"
          },
          "Tags": {
            "items": {
              "$ref": "#/components/schemas/TagTypeDef"
            },
            "type": "array",
            "title": "Tags"
          },
          "BlockPublicAccessStates": {
            "$ref": "#/components/schemas/BlockPublicAccessStatesTypeDef"
          },
          "VpcId": {
            "type": "string",
            "title": "Vpcid"
          },
          "State": {
            "type": "string",
            "enum": [
              "available",
              "pending"
            ],
            "title": "State"
          },
          "CidrBlock": {
            "type": "string",
            "title": "Cidrblock"
          },
          "DhcpOptionsId": {
            "type": "string",
            "title": "Dhcpoptionsid"
          }
        },
        "type": "object",
        "title": "VpcTypeDef"
      }
    },
    "securitySchemes": {
      "HTTPBearerFromCookie": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "service - aws",
      "description": "Management of AWS cloud credentials, enabling seamless integration and automated connectivity"
    },
    {
      "name": "service - looking glass",
      "description": "Test network connectivity"
    },
    {
      "name": "service - SDR",
      "description": "Management for SDR (Session Details Records), a superset of classic NetFlow data"
    },
    {
      "name": "tenant",
      "description": "Manage tenant-related information like packages and services as well as contact information"
    },
    {
      "name": "tenant - virtual interface",
      "description": "Management for VIs (Virtual Interfaces)"
    },
    {
      "name": "group",
      "description": "Predefined Groups of IP prefixes and IPs ready to be used in filters for firewall and other services"
    },
    {
      "name": "sites",
      "description": "Manage information about sites providing network reach to order new Customer Ports"
    }
  ]
}